{"version":3,"sources":["src/CST.js","src/scenes/LoadScene.js","src/scenes/utils.js","src/scenes/MenuScene.js","src/scenes/CardScene.js","src/scenes/FireScene.js","src/scenes/ToolScene.js","src/scenes/StarFluidScene.js","src/scenes/StarScene.js","src/main.js"],"names":["CST","SCENES","LOAD","MENU","CARD","FIRE","TOOL","STAR_FLUID","STAR","LoadScene","key","load","image","loadingBar","add","graphics","fillStyle","color","on","percent","fillRect","game","renderer","height","width","cardIndex","i","spritesheet","frameHeight","frameWidth","atlas","scene","start","Phaser","Scene","createButton","button","text","that","setInteractive","canvas","style","cursor","txt","font","fill","align","setDepth","x","y","createBackButton","interval","btn","clearInterval","setScale","getRandomInt","min","max","Math","ceil","floor","random","MenuScene","bg","setOrigin","logo","starFluidButton","starButton","CardScene","cards","card","sprite","push","secondDeckWidth","secondDeckHeight","sDepth","cardInterval","setInterval","shift","length","backButton","FireScene","fpsText","particles","createEmitter","alpha","end","scale","speed","accelerationY","angle","rotate","lifespan","blendMode","frequency","maxParticles","time","delta","setText","toFixed","emitters","first","alive","ToolScene","el1","destroy","el2","el3","configurations","fontSize","generatorInterval","selectedConfig","displayImage","displayText","el","type","setVisible","StarFluidScene","config","createStarAnimation","displayHeight","sys","scaleX","scaleY","frame","backgroundAnim","window","innerWidth","innerHeight","anims","create","frames","frameRate","repeat","play","StarScene","star","zvezda","frameNames","textures","get","getFrameNames","filter","indexOf","frameZvezdice","zvezdica","showRandomStars","setTimeout","entity","lastElement","Game","WEBGL","physics","default","arcade","useTree","gravity","render","pixelArt"],"mappings":"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;AEwBV2I,ALvBQnJ,ACAAA,AJCP,AMFUA,ACAAA,AFCHA,AJqBJ,EOEJmJ,ILvBQnJ,ACAAA,AEDGA,ACAAA,AFCHA,EGuBF,APFEyC,CErBG,ACAA,AEDG,ACAA,AFCH,CGuBH,CLvBKnD,ACAAA,AEDGA,ACAAA,AFCHA,KJqBT,EAAc,EErBDC,ACAAA,AEDGA,ACAAA,AFCHA,MFAJ,ACAA,AEDG,ACAA,AFCH,CFAWG,ACAAC,AEDGE,ACAAC,AFCHF;AGwBpBwJ,ALzBM,ACAA,AFDI,AICJ,ACAA,AFAA,AJuBFzG,IOEJyG,CL1BU,ACAA,AEAA,ACAA,AFAA,CJwBNzG,MOEI,EAAE,KPFO,CAACF,QAAD,CAAb,qDCvBE;AMwBF,ALrBP,ACAA,AFFOzC,AIAP,ACAA,AFEA,AJqBI,MCvBGA,GAAG,EAAEV,SAAIC,MAAJ,CAAWE;AMGM,ANJpB,CMII,CAAX,GNLW;AAIb,ADsBGmC,IAAAA,IAAI,CAACP,KAAL,CAAWC,KAAX,CAAiBhC,MDtBd,CAEN,ECoBwBC,MAAJ,CAAWE,IAA5B;AACH,GALD;AAMAiD,EAAAA,GAAG,CAAClC,EAAJ,CAAO,aAAP,EAAsB,GGvBf,GDAG,AGFA,ACAA,AFEA,CCAT,ACAA,KNuB2B;AEtBxB,ACAA,ACAA,AJuBAoB,IAAAA,IAAI,CAACjB,CGvBD6D,CDACpE,AEAAA,EJuBL,CEvBA,AEAA,AJuBU0B,CEvBD5B,AEAAA,EDAT,GDAA,AEAA,AJuBA,CEvBe,AEAA,AJuBE6B,CEvBjB,AEAA,EFAkB,AEAA,CFAlB,AEAA,CJuBA,CEvBqB,AEAA,AJuBEC,GDtBjB,GCsBN,GAAgC,CEvBhC,AEAA,EFAiCsB,AEAAA,MJuBjC,GEvBA,AEAA,CFA2C,AEAA,CFA3C,AEAA,EFA8CjB,AEAAA,QFA9C,AEAA,CFAuD,AEAA,CFAvD,AEAA;AFCH,ACAG,AJAM,AKAT,AJuBA,GAFD,OGrBQoC,SAAJ,UFFK;AEGR,AFFG,ADyBJ/B,EAAAA,GAAG,CAAClC,EAAJ,CAAO,CCzBG6C,EAAE,GAAG,KAAKjD,CDyBpB,ECzBe,ADyBM,CCzBGF,KAAT,AIAN,ACAA,CLAqB,CAAf,EAAkB,CAAlB,CDyBY,CCzBS,UAArB,EAAiCoD,SAAjC,CAA2C,CAA3C,EAA8CjB,QAA9C,CAAuD,CAAvD,CAAX;AFEA,AEDA,AIAA,ACDK,AN0BLT,IAAAA,IAAI,CAACjB,CCzBD4C,AIAAF,EAAJ,CLyBA,CCzBQ,ADyBEvB,GCzBC,GDyBX,CAAiBC,CCzBD3B,GAAL,CAASuB,ADyBpB,CAAuBK,GCzBZ,CAAc,CAAd,CDyBX,CCzB4B,EDyBI,GCzBCrB,IAAL,CAAUC,CDyBtC,OCzB4B,CAAmBC,MAAnB,GAA4B,GAA7C,EAAkD,cAAlD,EAAkE;AFE7E,AEDIqB,ADyBP,GAFD,KCvBQA,GFCCjC,CEDG,EAAE,CFCV,CAAUC,KAAV,CAAgB,IEF6D,GCCxE,AEAA,GLCL,EAA4B,6BAA5B;AGAA,AHCA,AEDIiC,AIDJ,ACDA,AFCK,AJ0BTO,EAAAA,GAAG,CAACE,ECzBIT,ECAAtB,AGDA,ACDAwC,CPGCpD,CEDG,AKFR,ELEU,ADyBd,CDxBI,AMFSU,AL0BA,CEzBC,AHCAT,GGDG,AGDT,AL0BR,CEzBI,ADF6E,AIC/D0G,CNEd,CAAgB,IMFZ,CAAiB/F,GFCf,GEDF,ENEJ,CMF8B,CNEC,IMFIF,IAAL,CAAUiG,MAAV,CAAiB9F,KAA/C,EAAsD,SNEtD;AGAA,ACAA,AJCA,AEDIsB,AIDAiB,AL0BR,QCzBQjB,AIDAiB,CL0BDX,CEzBCiB,AGDE,CFCDvD,AJCAH,CCwBT,CCzBa,AIDA,CFCT,CDAS,ACAAC,AJCT,AEDW,CFCDA,EGDE,AGDEE,EHCd,ACAA,CAAe,AJCf,AMFS,CFCT,AJCgB,AMFEF,EFCA,CAAlB,EAAqB,AEDZ,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CNE9B,EIDA,AJC+B,EIDEoD,SAAjC,CAA2C,CAA3C,EAA8CjB,GEDrC,CAAL,IFCJ,CAAuD,CAAvD,AJCA;AGAA,ACAA,AJCA,AEL6E,AIGzE,ACFJ,AFCA,AJ2BP,OC7BkB,EAIRA,CCACtB,AIHA,AFCA+E,CDEC7F,AJCAA,EMFI4G,ADDT,EDEA,AJCA,AOJSlG,AFCA,CDECT,AJCAA,CELC,CAIC,CCAC,ADJF,AKCP,CLDJ,AKCc0G,AFCAb,CDEd,AJCA,CGDgB,ACAA,AJCA,CGDhB,GIHI,CAAiBlF,AFCZ,CDET,ACFsBiF,EDEE,CCFf,CCCL,CAAyB,ACFzB,EPIJ,COJ8B,CPIC,IOJInF,EDE/B,ECF0B,CAAUiG,MAAV,CAAiB9F,KAA/C,EAAsD,KHGtD,AJCA;AIAA,AJCA,AEDAyC,AIDC,ACFGF,AFCJ,MHEAE,CIJA,CCCIF,EHGAiB,AFAA,AKHE,AFCF0B,CLGC/F,AEDAqC,CAAL,CIDO,ACFE,AFCT,ELGA,AEDS,AGFA,CLGCpC,EOJIE,EHGA,AFAAO,AGFAoF,CLGd,AOJS,CPIO,AOJE7F,CHGD,CFAR,CAAUU,EKHV,AFCA,CEDe,AFCFoF,CEDb,EAAkB,AFClB,CEDA,CLGA,CAAmBlF,AKHE,KLGrB,GAA2B,CAA3B,CFCT,EAAwC,AEDAyC,IAAI,CAACzC,CEAX,IAAjB,AFAuB,AKH/B,CHGT,AGHI,ELGiD,CAArD,uBFCA;AGDA,ACCH,AJCG,AEDA,AIDIuC,ACFH,AFCD,AJ2BD,OM9BC,CDIIA,CL0BIR,CCzBJW,AIDE,ADDFyC,CFCC,AHEAhG,EMFI,ACFF,AFCP,EFCSe,AHET,AKHS,CFCC,AHEAd,EMFIE,CHAD,CEDC2F,CFCd,AHEA,AMFS,AL0BV,CDxBiB,AMFE7F,AL0BG4C,CE1BJ9B,CAAC,CDCC,ADyBpB,EK1BU,ADDA,AJ2BiB+B,CE1BJ,ADCA,AIDE,ADDFkD,CFCtB,AGAS,CL0BV,CE1B0BjF,AGAE,ADDlB,CFCiB,AGAjB,AL0BsB,CCzBJZ,CCD3B,AHEA,AMF8B,EHAA,AHEA,AEDR,CAASF,KAAT,CAAe,GID5B,CAAL,CJCsCS,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GFCrC,AEDgE,CAA1C,EAA6C,KAAKH,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,CAAzE,EAA4E,aAA5E,EAA2FwB,QAA3F,CAAoG,CAApG,CAAtB;ACAI,AHEJ,AEDA,AIDI,ACFAgB,AFCJ,AJ2BJP,EAAAA,GAAG,GM5BKO,AN4BFL,ECzBES,AKHE,AFCAyC,CLGDjG,CGFG2D,AF0BF,CK1BGiD,ACFA,AN4BF5D,EDxBP,CGFY,AHEF/C,CCwBR,CM5BYE,AN4BF0C,CE1BG,CDCD,CFCd,AOJS,AN4BP,CDxBc,AOJE5C,AN4BtB,CCzBqB,CCDGE,AEDA,GFCL,AIFN,AFCc,CFCCyD,ADCFzD,AKHE,AFCA,CEDf,ELGQ,AKHU,CLGDF,AIDtB,ACFK,CDEoB,ADDN,CFCR,AIFe,CJEC,AEDA,EHEd,CCDF,ADCiB,ECDI,AEDb,EAAe,CLGtC,AEDqCS,CIDjC,CNEmC,CGFGE,CDCV,AKHvB,AFCc,CHEmBD,AKHtC,CFCyC,GFC9B,EEDQ,CAAvB,CHEgC,CAAmBE,KAAnB,GAA2B,CAA1C,ECDwCC,ADCK,KAAKJ,ICDpD,ADC+C,CAAUC,ECDFyB,MDCR,CAAmBxB,CCDlE,AHEf,CGF+EG,CAAhE,AHNT,CGMF,AHGJ,EEF8D,GAA4B,CAA5B,GAAgC,GAA7E,EAAkF,aAAlF,EAAiGqB,QAAjG,CAA0G,CAA1G,CAAjB;ACAIsB,ADCJ,AIDC,ACFA,AFCD,AJ2BJZ,EAAAA,GAAG,GE1BKY,AF0BFX,EI3BE8C,EJ2BE,CE1BG,AEDT,AJ2BO5C,CE1BGY,IAAN,AF0BF,CE1BaF,AF0BFb,GAAX,CE1BE,AF0BR,GCzBiBS,eAAb,EAA8BlE,SAAIC,MAAJ,CAAWM,UAAzC,EAAqD,WAArD,EAAkE,IAAlE;ACAIkB,AHEJ,AEDA,AGFA,AJ2BJ,QE1BQA,CF0BDiC,CDxBC7C,AKHA6F,GAAJ,AJ2BO,CAAC9C,GE1BK,EF0BV,CDxBW,ACwBAF,GDxBG,CCwBC,CAACG,CCzBNM,EFCSrD,CIHjB,EJGY,ACwBH,CDxBYC,IED1B,CDyB+B0C,CCzBNzD,EFCR,ACwBiB,CDxBC,ECwBEwD,GAAN,CCzBFvD,EDyBc,CAA7B,CAAX,ECzBsB,CAAWO,CDyBagD,GCzBjD,ADyBJ,ECzB8C,WAA1C,EAAuD,IAAvD;ACAIjC,ACDJ,AJGIP,AEDP,AIFG+C,ACFAA,AFEA,AJ2BP,MK3BOA,ACFAA,EJGIxC,AHEAP,AMHF,ACFA,CDECwG,ACFAA,CFECb,CDACzB,ECAL,CFCU,GHEG,CGFC,ACDd,CJGe,CGFX,CCDW,CEAf,ACFA,GDEmB,ACFA,CHECpE,GAAL,CAASuB,AEAAoF,ACFAA,GDEL,ACFA,CHEJ,AEAapG,ACFAA,CHEC,EAAd,CEAI,ACFA,CHEc,AEAAiG,ACFAA,EHElB,EAAsB,EEAlB,ACFA,CDEqB/F,ACFAA,MDExC,ACFA,eHEe,EAAgD;ADE9D,ACDGqB,AJGI3B,AMHR8C,ACFAA,AFEA,MCAAA,ACFAA,EHEInB,AEAF,ACFA,CDEC8E,ACFAA,CPKKzG,AKHJ4F,EDAI,EAAE,CJGG,AMHb,ACFA,EPKe,CMHH9C,ACFAA,AFEZ,ECAc,ACFA,CDEC4D,ACFAA,MDEf,ACFA,IHC+D;AAE3D9E,AJCW,AMDfkB,ACFAA,AFEA,MCAAA,ACFAA,EHEIlB,AEAF,ACFA,CDECI,ACFAA,CDEH,ACFA,AFEI6D,EDAI,CEAD,ACFA,CHEG,IEAEzF,ACFAA,IDEL,ACFA,CDEUiG,ACFAA,IFEI,ECAd,ACFA,CDEiB/F,ACFAA,AFEAsD,MCAjB,ACFA,GDE0B,ACFA,CDEjC,ACFA,CFEmC,CAAC,YAAM;AFC1C,ACH+D,AJE5B,AMCnCd,ACFAA,AFEI,MCAJA,ACFAA,CHDe,AJEE,CIFjB,AJEA,AMCE,ACFA,CDECf,ACFAA,CJECyB,AGAJ,ACFA,EFEQ+B,CCAD,ACFA,EFEH,EAAS,CCADnF,ACFAA,IDEL,ACFA,AFEU,CCAAiG,ACFAA,AFECb,EFAC,GAAG,CGAf,ACFA,CDEiBjF,ACFAA,AFEX,CFAb,AEA0BgF,GAAb,CCAN,ACFA,GDEyB,ACFA,CDEhC,ACFA;AJGA,ACCA,AJGA,AMJA,ACDA,AFCI,EHpBmBvE,MAAM,CAACC,CCoB1BwC,CCCCS,AJGAxE,AOLA6H,CFCG9B,GLIR,AOLA,AFCI,CLIMxF,CKJG,CLIb,AOLY,CPKC,CIHb,ECDiB,CDCA,AGFAJ,AFCC2F,GFAE,AIDR,CAASlC,CHECzD,CDDC,AHIvB,CKJa,CDCI,AJGQ,AKJC4F,CFA1B,ACC0BvB,CGFd,CAAgB2C,AFCf,CCAI,IAAjB,CCDkC,CHEjB,AJGS3G,AOLS4G,CHEC,MAAnB,AJGQ,CIHzB,CJGsC,COLV,GAAoB,CAApC,EAAuCD,MAAM,CAACE,WAAP,GAAqB,CAA5D,EAA+D,MAA/D,EAAuE,cAAvE,CAAZ;AJEA,ACEA,AJEInH,AMJP,ACDG,AFCI,QLIAA,EGJA8D,CCECQ,AGHAsD,CFCG9B,GAAJ,CFAM,CIDV,AFCa,CLIC,CGJD,AHIEvF,CGJf,ACEA,AGHc,CHGCgE,CCFE,CAACqB,EEDC3F,EPKf,CAAoB,AOLV,CPKV,AOLmByD,CFCV,CLIc,AKJDoC,GDE1B,ACFa,CDEgB,AGHf,CPKiB,AOLDmB,CPKEzG,IAAL,CAAUC,AOLD,CAACyG,OPKV,CAAmBxG,EOLhB,GAAoB,CPKvB,AOLb,EAAuCuG,CPKE,CAAnD,EAAsD,EOLC,CAACE,EPKE,CAAC3G,IAAL,CAAUC,GOLf,GAAqB,CAA5D,CPK4C,CAAmBE,AOLA,KPKnB,COL5C,EPKuEL,AOLA,OPKjF,EAA0F,EAA1F,COLU,CAAd;AJEA,ACEIkE,AJEH,AOLD,AFCI,OLEJ,CIAIA,EDFAT,AIDE8D,EFCE3B,CDEC,EAAE,KGHK,EJCA,CIDG,EJCAlC,CEAG,EEDE8D,CFCC/B,OFAK,AIDX,CJCY,AIDEgC,GAAd,CAAkB,EFCE,CAAC,GEDrB,EJCkB,AIDQC,aAA1B,GAA0CC,IFCR,CAAb,CEDrB,CAAiD,AFCZlC,UEDYgB,IFCE,CEDG,AFCF7C,MAAf,GAAwB,CAAxC,CAAD,CAAnC;AFCAV,ACCSrC,AJIb,AOPyE,AFErE,QFAAqC,ECCSrC,CJIRrB,CKLGqC,CFAC,AEAA,CFAC,CAAD,ACCS,AJIlB,AOP6E4E,CJEzE,AHKM1G,AKLE,CFAC8B,ACCO,CDDhB,ACCO,AJIX,CAAa,COPqE,CJEjEyB,AIFkEsE,OAAN,CPO7E,AOP2F,EPOlE,KGLrB,KEAqB,CEFoD,CPO9C,CAC9B,AKNW,CLKZ,COP4G,AFE9E,CLfxB,AOauG,CPS7G,AOTyE,CFE7D,CAAR;AFCA1E,ACAmBiB,AGHkD,AFGrE,OEHe,CJGfjB,AIHJ,EHGuBiB,ECAfrC,CFAC,ACAiB,ACAjB,CFAC,CAAD,ACAmB,CDAxB,AEAQ,CFACA,CAAT,GAAayB,gBAAb,GGFYkD,CDES,GAAb,EAAkB,CCFP,EDEX,CAAR;AFCAvD,ACDO,AJOX,AMRA,ACDA,AFGI,QFAAA,CCFyB,CJQzB5C,AOTEuH,CDCDnB,CDEGhB,CFAC,CAAC,CAAD,CAAL,CAAS9D,EHMA,CKNG,ELMA,CAAhB,AOTmB,AFGA,EFAf,AGFJ,CHEsB4B,AIHA,EDCA,GCDKgE,CJGvB,CGFuB7H,GAAL,CAASyD,ECDT,CAAcqE,GDCd,ACDA,CDCgBd,ACDE,IFGR,ECFY,ACDtB,AFGH,CCF0BC,CCDGc,AFGZ,EAAjB,CAAf,MCFkC,GAAoB,CAApC,ACDA,EDCuCf,CCDGgB,KDCG,CAACd,ACD9C,CAAiD,UDCV,ACDUiB,GDCW,CAA5D,EAA+D,ECDN,cDCzD,YAAoFrB,KAApF,SAAtB;AHGIlD,ACDAa,AEDJ,ACF+E,QJI3Eb,ACDAa,GEDC0C,EFCI,EAAE,AGHwEgB,CDEnF,CAAWf,MAAX,ACF2F,CJIvE,AGFF,ACF0Ea,IJIpE,EAApB,CIJ+E,CAAiB,WAAjB,IAAgC,CAAC,CAArC;AJK3EpE,ACFS3C,AJOb,AMPItB,ACH2E,AFI3E,OEJkB,CJKlBiE,AGFAjE,ACHJ,EHGasB,CJOR,AMPE,EAAE,CHEC,CCFQ,AJOTN,CAAC,AKNCqF,CDDS,EJOP,CIPF,AJOX,AMRkB,ENQFrF,CAAC,GAAG,EAApB,EAAwBA,AKNpB,CLMqB,EAAzB,EAA6B;AGJzB2C,ACHqBiB,AJQrB,AMPA6C,ACHJ,AFIQ,QFCJ9D,AGFA8D,EFDqB7C,CGFpB4D,CPUGxH,CGLC,ACHmB,AJQnB,CGLCoD,AGFA,CFDoB,ACEjB8B,CCDD,CACJ,CNMM,CGLV,CHKI,IAAYlF,CAAC,COVrB,CAAqBgH,EFIM,CLMD,AKNE,CAAD,CLMnB,AKNA,ILMwBhH,CAAC,AOVjC,EAAiC,GPUK,EAAlC,AOVkC8G,EPUI,EOV1C,EAA4C,yBAAa,GAAb,EAAkB,IAAlB,CAA5C,EAAqE,CAArE;AHEW,AJSH,AMNI9H,ACJZyI,AFIY3C,MEJZ2C,GHD6B,CEKjBzI,EDAA8F,CCAG,ENMF7F,AMNI,ADAF,CEJL,CAAC,CFIO,CLMV,CAAUgB,GKNI,CAACqF,KEJN,EPUT,AMPA,KDCU,CAAkBhE,CAAlB,EAAqBC,CAArB,CAAN,ILMyBxB,SAA7B,sCAAsEC,CAAtE,WAA+E;AGLnF,ACHA8D,AJSQ5D,AMNAgG,ACJR,AFIQlB,QDHRlB,AGDA,EDIQoC,EHAJ,AHMIhG,AKNA8E,CFAHrC,ACHA,AGDD,CAAC6E,CHCE,AEGM,ADAF,EDNc,CDMf,AEAI,CFAHnE,IHMQ,AKND,CAACkC,CFAnB,AHMqB,EGNF,AHKgE,AMLjEW,ECJlB,CAAqBoB,EDIR,GDAC,CAAiBxC,GAAG,CAACxD,CAAJ,EEJ/B,CFIuCwD,CEJH,EFIM,CAAChF,EEJH,CAACiH,EFIV,GAAoB,CEJnD,CFIc,CEJmC,CFIMxF,CAAzC,EAA4C4D,QAA5C,CAAN,YEJsD,GAAb,EAAkB,IAAlB,CAAjD,EAA0E,CAA1E;AJKIxD,ACHJoC,AJSQ5D,AMTJ,ACDP,AFIW8E,OENF,CHGNlB,CEDQ,ACAT,CJIKpC,CGCA,CNKIxB,AOZF,AFME8E,CENZ,EFMe,GAAG,GDHD,CJSK,CGND,ACHF,ACGG,CFAA/B,ACHF,AJSI,AKNDoC,GDPM,SDOR,AEAH,CFAV,AEA4BN,GAAG,CAAC1D,CAAJ,GAAQ0D,GAAG,CAAClF,KAAZ,GAAoB,EAApB,GAAyBqF,QAA3C,EAAqD5D,CAArD,CAAN;AFCP,ACHDyC,AJMmF,AMF3EhF,ACLZ,AFIY,QDHRgF,EEIQhF,CNEJ,EINC,AEIM,EFJJ,AEIM,gBADT,ICJS,IAAjB;AJKC,ACJY8C,AJUL/B,AMLImG,ACLf,OJNiC,EAU3B,CCJUpE,AJUL/B,AMLImG,GHXkB,ACMd,CDNhB,CCMkB,AEKD,CFLE,EAAR,CJUM,QMLKA,KAAL;AHAjB,ACLuBnE,AJWlB,AMRG,ADCA,SCNI,CHORuB,ACLmBvB,CEOf,EFPkB,EAAE,ACIfmD,CDJgB,IDKf,GAAG,MEDU,CAAC,CAAD,CAAnB,oBFC0B,IAAjB,EAAuBhC,YAAvB,CAAjB;AACH,ACNc,AJYV,AMJWlE,ADHA8F,OLzBN,CAiCN,CIlB6B,CEajB9F,EDHA8F,CCGG,EAAE,ADHF,GAAG,KAAI,CAACQ,OCEf,KDFU,CAAkBhE,CAAlB,EAAqBC,CAArB,CAAN;ADJR0C,AEQQiC,ADHAlB,QDLRf,EEQQiC,EDHAlB,EDLF,CEQO,ADHF,CDLH,ECKM,KAAI,CAACM,GCGDY,KAAL,ICRJO,AFKK,CAAkB3B,GAAG,CAACxD,CAAJ,EELfoG,CFKuB,GAA1B,EAA+BnG,CAA/B,CELWE,AFKjB,UEL2BkG,aAAa;AHAtC7F,AEMN,ACN4C,AFMxCmD,SCTA,CFGEnD,CEUN,CDJImD,CDNK,EAAE,ACMJ,CDNK,ECMF,CDNN,ICMU,CAACK,YAAL,CAAkBN,GAAG,CAAC1D,CAAJ,GAAQ,GAA1B,EAA+BC,CAA/B,CAAN;ADNaQ,AJazB,AMFY/C,ADJA,UDPa+C,AEWb/C,CNEPC,EIbuB,AEWb,EFXe,AJa9B,AMFiB,CNEPC,KAAV,CAAgB,OAAhB,EAAyB,AMHjB,gCNGR;AIbY,AJcZ,AMFYgH,ACXZ/C,EJ9BuB5C,II8BvB4C,EJ9B6B,CAAC3C,ACuBD,CEkBjB0F,CNEPjH,IAAL,AMFiB,CNEPC,CObC,CAAC,GPaZ,CAAgB,KMFMgH,ENEtB,CObkB,CPaO,CMFR,2BNEjB;AIbIhC,AJcJ,AMLQ,ACRJ,AFMI,QDPJA,CEJQ,ENkBPjF,AMDG,CCZAyI,GPaR,AKPaxC,CDPD,AJcFhG,EIdI,AGCV,EAAY,CPahB,CAAgB,OAAhB,AKP2B,CAAC,CLOH,AKPE,CAAnB,2BLOR;AIdgB4C,AJehB,AMDY9C,ACZJ0I,AFMI5C,UDRIhD,AEcJ9C,ACZJ0I,CPaHzI,CKPO6F,CDRO,AEcJ,EFdM,AJerB,AMDiB,ADNF,CLOL5F,AObI,CAAC6F,CFMG,CDRJ,EJed,CAAgB,CKPM,CENd,AFMeO,KLOvB,EAAyB,AMFjB,KDLU,CAAkBhE,CAAlB,EAAqBC,CAArB,CAAN,iBLOZ;AIf2BQ,AJgB3B,AMDYmE,ACZP,AFMOlB,UDTejD,AEefmE,CNCPjH,CKPO+F,CDTkB,EAAE,AJgBhC,AMDiB,ADNF,CLOL9F,EKPQ,GLOlB,CAAgB,CKPM,CAACoG,GCMDY,ENCtB,EAAyB,CMDR,IDNC,CAAkBpB,GAAG,CAACxD,CAAJ,GAAQ,GAA1B,EAA+BC,CAA/B,CAAN,YLOZ;AIhBc,AJiBd,AMJQ,ADHI0D,SDjBiB,AEGjB,CAFM,CNuBbhG,CKPOgG,GLOZ,AKPe,CLOLhF,EKPQ,KAA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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["export const CST = {\n    SCENES: {\n        LOAD: 'LOAD',\n        MENU: 'MENU',\n        CARD: 'CARD',\n        FIRE: 'FIRE',\n        TOOL: 'TOOL',\n        STAR_FLUID: 'STAR_FLUID',\n        STAR: 'STAR'\n    }\n}","import { CST } from '../CST';\n\nexport class LoadScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.LOAD\n        })\n    }\n    init() {\n\n    }\n    preload() {\n        // MAIN MENU\n        this.load.image('title_bg', './assets/image/title_bg.jpg');\n        this.load.image('menu_button', './assets/image/menu_button.png');\n        this.load.image('back_button', './assets/image/back.png');\n        this.load.image('star_random', './assets/image/star-bg.png');\n        this.load.image('star_random_portrait', './assets/image/star-bg-portrait.png');\n        this.load.image('star_fluid', './assets/image/star-fluid-bg.png');\n        this.load.image('star_fluid_portrait', './assets/image/star-fluid-bg-portrait.png');\n        // LOADING BAR\n        let loadingBar = this.add.graphics({\n            fillStyle: {\n                color: 0xffffff\n            }\n        });\n\n        this.load.on('progress', (percent) => {\n            loadingBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percent, 50);\n        });\n\n        this.load.on('complete', () => {\n        });\n        // CARDS\n        let cardIndex = 0;\n        for (let i = 0; i < 55; i++) {\n            if (i !== 13 && i !== 27 && i !== 41) {\n                this.load.spritesheet(`card${cardIndex}`, `assets/sprite/cards/tile0${i}.png`, {\n                    frameHeight: 96,\n                    frameWidth: 72\n                });\n                cardIndex++;\n            }\n        }\n        // FIRE\n        this.load.image('space', 'assets/particles/starfield.jpg');\n        this.load.image('fire1', 'assets/particles/fire1.png');\n        this.load.image('fire2', 'assets/particles/fire2.png');\n        this.load.image('fire3', 'assets/particles/fire3.png');\n        this.load.image('smoke', 'assets/particles/smoke-puff.png');\n        this.load.spritesheet('ball', 'assets/particles/plasmaball.png', {\n            frameHeight: 128,\n            frameWidth: 128\n        });\n        // TOOL\n        this.load.spritesheet('euro', 'assets/sprite/euro.png', {\n            frameHeight: 128,\n            frameWidth: 128\n        });\n        // Star Fluid\n        this.load.atlas('backgroundAnim', './assets/image/backgroundAnim.png', './assets/image/backgroundAnim.json');\n        // Star Random\n        this.load.atlas('star', './assets/image/star.png', './assets/image/star.json');\n    }\n    create() {\n        this.scene.start(CST.SCENES.MENU);\n    }\n}","/** @type {import(\"../typings/phaser\")} */\nimport { CST } from '../CST';\n\nexport default function createButton(button, scene, text, that) {\n    button.setInteractive();\n    button.on('pointerup', () => {\n        that.scene.start(scene);\n    });\n    button.on('pointerover', () => {\n        that.game.canvas.style.cursor = \"pointer\";\n    });\n    button.on('pointerout', () => {\n        that.game.canvas.style.cursor = \"initial\";\n    });\n    let txt = that.add.text(0, 0, text, {\n        font: '20px Arial',\n        fill: '#fff',\n        align: 'center'\n    }).setDepth(2);\n    txt.x = button.x - txt.width / 2;\n    txt.y = button.y - txt.height / 2;\n}\n\nexport function createBackButton(that, interval) {\n    let btn = that.add.image(that.game.renderer.width - 64, that.game.renderer.height - 64, 'back_button').setDepth(0);\n    btn.setInteractive();\n    btn.on('pointerup', () => {\n        if (interval) {\n            clearInterval(interval);\n        }\n        that.scene.start(CST.SCENES.MENU);\n    });\n    btn.on('pointerover', () => {\n        that.game.canvas.style.cursor = \"pointer\";\n    });\n    btn.on('pointerout', () => {\n        that.game.canvas.style.cursor = \"initial\";\n    });\n    btn.setScale(0.15);\n    return btn;\n}\n\nexport function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}","import { CST } from '../CST';\nimport createButton from './utils';\n\nexport class MenuScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.MENU\n        })\n    }\n    create() {\n        const bg = this.add.image(0, 0, 'title_bg').setOrigin(0).setDepth(0);\n        let logo = this.add.text(0, this.game.renderer.height * 0.2, 'Gamanza Test', {\n            font: '48px Arial',\n            fill: '#fff',\n            align: 'center'\n        }).setDepth(1);\n        logo.x = this.game.renderer.width / 2 - logo.width / 2;\n        let starFluidButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2, 'menu_button').setDepth(1);\n        let starButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2 + 100, 'menu_button').setDepth(1);\n        createButton(starFluidButton, CST.SCENES.STAR_FLUID, 'Zadatak 1', this);\n        createButton(starButton, CST.SCENES.STAR, 'Zadatak 2', this);\n    }\n}","import { CST } from '../CST';\nimport { createBackButton } from './utils';\n\nexport class CardScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.CARD\n        })\n    }\n    preload() {\n        this.add.image(0, 0, 'title_bg').setOrigin(0).setDepth(0);\n    }\n    create() {\n        let height = 0;\n        let cards = [];\n        let cardIndex = 0;\n        for (let i = 51; i >= 0; i--) {\n            let card = this.add.sprite(100, 100 + height, `card${cardIndex}`).setDepth(i);\n            cards.push(card);\n            cardIndex++;\n            height += 10;\n        }\n        let secondDeckWidth = 500;\n        let secondDeckHeight = 610;\n        let sDepth = 0;\n        let cardInterval = setInterval(() => {\n            cards[0].x = secondDeckWidth;\n            cards[0].y = secondDeckHeight;\n            cards[0].setDepth(sDepth);\n            secondDeckHeight -= 10;\n            sDepth++;\n            cards.shift();\n            if (!cards.length) {\n                clearInterval(cardInterval);\n            }\n        }, 1000);\n        let backButton = createBackButton(this, cardInterval);\n    }\n}","import { CST } from '../CST';\nimport { createBackButton } from './utils';\n\nexport class FireScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.FIRE\n        })\n    }\n    init() {\n        let fpsText;\n        let particles;\n    }\n    preload() {\n        this.add.image(0, 0, 'title_bg').setOrigin(0).setDepth(0);\n        this.load.image('fire', 'assets/particles/muzzleflash3.png');\n        let backButton = createBackButton(this);\n    }\n    create() {\n        this.fpsText = this.add.text(10, 10, 'FPS: -- \\n-- Particles', {\n            font: 'bold 26px Arial',\n            fill: '#ffffff'\n        });\n    \n        this.particles = this.add.particles('fire');\n    \n        this.particles.createEmitter({\n            alpha: { start: 1, end: 0 },\n            scale: { start: 0.5, end: 2.5 },\n            speed: 20,\n            accelerationY: -300,\n            angle: { min: -85, max: -95 },\n            rotate: { min: -180, max: 180 },\n            lifespan: { min: 1000, max: 1100 },\n            blendMode: 'ADD',\n            frequency: 110,\n            maxParticles: 10,\n            x: 400,\n            y: 300\n        });\n    }\n    update(time, delta) {\n        this.fpsText.setText('FPS: ' + (1000/delta).toFixed(3) + '\\n' + this.particles.emitters.first.alive.length + ' Particles');\n    }\n}","import { CST } from '../CST';\nimport { createBackButton, getRandomInt } from './utils';\n\nexport class ToolScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.TOOL\n        })\n    }\n    preload() {\n        this.add.image(0, 0, 'title_bg').setOrigin(0).setDepth(0);\n    }\n    create() {\n        if (el1) this.destroy(el1);\n        if (el2) this.destroy(el2);\n        if (el3) this.destroy(el3);\n        const configurations = ['STS', 'SSS', 'SST', 'TST'];\n        let el1;\n        let el2;\n        let el3;\n        let fontSize;\n        let generatorInterval = setInterval(() => {\n            if (el1) this.destroy(el1);\n            if (el2) this.destroy(el2);\n            if (el3) this.destroy(el3);\n            let selectedConfig = configurations[getRandomInt(0, configurations.length - 1)];\n            let x = getRandomInt(100, 650);\n            let y = getRandomInt(100, 650);\n            let fontSize = getRandomInt(14, 42);\n            switch(selectedConfig) {\n                case configurations[0]:\n                    el1 = this.displayImage(x, y);\n                    el2 = this.displayText(el1.x + el1.width - 78, y, fontSize);\n                    el3 = this.displayImage(el2.x + el2.width + 20 + fontSize, y);\n                    break;\n                case configurations[1]:\n                    el1 = this.displayImage(x, y);\n                    el2 = this.displayImage(el1.x + 100, y);\n                    el3 = this.displayImage(el2.x + 100, y);\n                    break;\n                case configurations[2]:\n                    el1 = this.displayImage(x, y);\n                    el2 = this.displayImage(el1.x + 100, y);\n                    el3 = this.displayText(el2.x + el2.width - 78, y, fontSize);\n                    break;\n                case configurations[3]:\n                    el1 = this.displayText(x, y, fontSize);\n                    el2 = this.displayImage(el1.x + el1.width + 50, y);\n                    el3 = this.displayText(el2.x + el2.width - 78, y, fontSize);\n                    break;\n            }\n        }, 2000);\n        let backButton = createBackButton(this, generatorInterval);\n    }\n    \n    destroy(el) {\n        if (el.type === 'Sprite') {\n            el.destroy();\n        }\n        if (el.type === 'Text') {\n            el.setVisible(false);\n        }\n    }\n    displayImage(x, y) {\n        return this.add.sprite(x, y, `euro`).setScale(0.5);\n    }\n    displayText(x, y, fontSize) {\n        return this.add.text(x, y, 'Sample text', {\n            font: `${fontSize}px Arial`,\n            fill: '#fff',\n            align: 'center'\n        });\n    }\n}","import { CST } from '../CST';\nimport { createBackButton } from './utils';\n\nexport class StarFluidScene extends Phaser.Scene {\n    constructor() {\n        super({key: CST.SCENES.STAR_FLUID});\n    }\n    preload() {\n        \n    }\n    create() {\n        let bg;\n        if (this.game.config.height > this.game.config.width) {\n            bg = this.add.image(0, 0, 'star_fluid_portrait');    \n            this.createStarAnimation('portrait');\n        } else {\n            bg = this.add.image(0, 0, 'star_fluid');    \n            this.createStarAnimation('landscape');\n        }\n        bg.displayHeight = this.sys.game.config.height;\n        bg.scaleX = bg.scaleY;\n        bg.y = this.game.config.height / 2;\n        bg.x = this.game.config.width / 2;\n        createBackButton(this);\n    }\n    createStarAnimation(frame) {\n        this.backgroundAnim = this.add.sprite(window.innerWidth / 2, window.innerHeight / 2, 'backgroundAnim', `${frame}_01`);\n        this.anims.create({\n            key: 'fluid',\n            frames: [\n                {\n                    key: 'backgroundAnim',\n                    frame: `${frame}_01`\n                },\n                {\n                    key: 'backgroundAnim',\n                    frame: `${frame}_02`\n                },\n                {\n                    key: 'backgroundAnim',\n                    frame: `${frame}_03`\n                },\n                {\n                    key: 'backgroundAnim',\n                    frame: `${frame}_04`\n                },\n                {\n                    key: 'backgroundAnim',\n                    frame: `${frame}_05`\n                }\n            ],\n            frameRate: 10,\n            repeat: -1\n        });\n        this.backgroundAnim.play('fluid');\n    }\n}","import { CST } from '../CST';\nimport { createBackButton, getRandomInt } from './utils';\n\nexport class StarScene extends Phaser.Scene {\n    constructor() {\n        super({key: CST.SCENES.STAR});\n    }\n    preload() {\n        \n    }\n    create() {\n        let bg;\n        if (this.game.config.height > this.game.config.width) {\n            bg = this.add.image(0, 0, 'star_random_portrait');\n        } else {\n            bg = this.add.image(0, 0, 'star_random');\n        }\n        bg.displayHeight = this.sys.game.config.height;\n        bg.scaleX = bg.scaleY;\n        bg.y = this.game.config.height / 2;\n        bg.x = this.game.config.width / 2;\n\n        this.star = this.add.sprite(window.innerWidth / 2, window.innerHeight / 2, 'star', 'smallStars_1');\n        this.zvezda = this.add.sprite(window.innerWidth / 2, window.innerHeight / 2, 'star', 'zvezdica_1');\n        const frameNames = this.textures.get('star').getFrameNames().filter(frame => frame.indexOf('smallStars_') > -1);\n        const frameZvezdice = this.textures.get('star').getFrameNames().filter(zvezdica => zvezdica.indexOf('zvezdica_') > -1);\n        this.showRandomStars(frameNames, this.star, getRandomInt(500, 1000), 5);\n        setTimeout(() => {\n            this.showRandomStars(frameZvezdice, this.zvezda, getRandomInt(500, 1000), 7);\n        }, 500);\n        createBackButton(this);\n    }\n    showRandomStars (frames, entity, interval, lastElement) {\n        setInterval(() => {\n            if (entity) {\n                entity.destroy();\n            }\n            const frame = frames[getRandomInt(0, lastElement)];\n            entity = this.add.sprite(\n                getRandomInt(0 + (entity.width / 2), window.innerWidth - ((entity.width / 2))),\n                getRandomInt(0 + (entity.height / 2), window.innerHeight - (entity.height / 2)),\n                'star',\n                frame\n            );\n        }, interval);\n    }\n}","/** @type {import(\"../typings/phaser\")} */\nimport { LoadScene } from './scenes/LoadScene';\nimport { MenuScene } from './scenes/MenuScene';\nimport { CardScene } from './scenes/CardScene';\nimport { FireScene } from './scenes/FireScene';\nimport { ToolScene } from './scenes/ToolScene';\nimport { StarFluidScene } from './scenes/StarFluidScene';\nimport { StarScene } from './scenes/StarScene';\n\nexport let game = new Phaser.Game({\n    type: Phaser.WEBGL,\n    width: window.innerWidth - 20,\n    height: window.innerHeight - 20,\n    scene: [\n        LoadScene,\n        MenuScene,\n        CardScene,\n        FireScene,\n        ToolScene,\n        StarFluidScene,\n        StarScene\n    ],\n    physics: {\n        default: 'arcade',\n        arcade: {\n            useTree: false,\n            gravity: { y: 100 }\n        }\n    },\n    render: {\n        pixelArt: true\n    }\n});"]}