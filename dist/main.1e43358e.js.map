{"version":3,"sources":["src/CST.js","src/scenes/LoadScene.js","src/scenes/utils.js","src/scenes/MenuScene.js","src/scenes/CardScene.js","src/scenes/FireScene.js","src/scenes/ToolScene.js","src/main.js"],"names":["CST","SCENES","LOAD","MENU","CARD","FIRE","TOOL","LoadScene","key","load","image","loadingBar","add","graphics","fillStyle","color","on","percent","fillRect","game","renderer","height","width","cardIndex","i","spritesheet","frameHeight","frameWidth","scene","start","Phaser","Scene","createButton","button","text","that","setInteractive","txt","font","fill","align","setDepth","x","y","createBackButton","interval","btn","clearInterval","MenuScene","logo","setOrigin","cardButton","toolButton","fireButton","CardScene","cards","card","sprite","push","secondDeckWidth","secondDeckHeight","sDepth","cardInterval","setInterval","shift","length","backButton","FireScene","fpsText","particles","createEmitter","alpha","end","scale","speed","accelerationY","angle","min","max","rotate","lifespan","blendMode","frequency","maxParticles","time","delta","setText","toFixed","emitters","first","alive","ToolScene","configurations","el1","el2","el3","fontSize","destroy","selectedConfig","getRandomInt","displayImage","displayText","Math","ceil","floor","random","el","type","setVisible","setScale","Game","WEBGL","physics","default","arcade","useTree","gravity","render","pixelArt"],"mappings":";;;;;;AAAO,IAAMA,GAAG,GAAG;AACfC,AOAJ,AHDA,ACAA,AJAA,AEAA,AGAA,ENCIA,MAAM,EAAE;AACJC,AEFR,IFEQA,IAAI,EAAE,MADF;AAEJC,AODR,AHDA,ACAA,AFAA,AGAA,INEQA,IAAI,EAAE,MAFF;AAGJC,AEFO,IFEPA,IAAI,CEFY4B,CFEV,MAHF,KECG,CAAsBC,MAAtB,EAA8BL,KAA9B,EAAqCM,IAArC,EAA2CC,IAA3C,EAAiD;AFGxD9B,AOFR,ALAI4B,EAAAA,EFEI5B,IAAI,AEFF,CAAC+B,CFEG,MAJF,OEER;AFGI9B,AEFJ2B,EAAAA,EFEI3B,IAAI,AEFF,CAACU,CFEG,CEFV,CAAU,WAAV,EAAuB,YAAM;AFHrB,AOGZ,ALCQmB,IAAAA,IAAI,CAACP,KAAL,CAAWC,KAAX,CAAiBD,KAAjB;AFLW,AEMd,CFNE,EEIH;AKCJ,ALEI,MAAIS,GAAG,GAAGF,IAAI,CAACvB,GAAL,CAASsB,IAAT,CAAc,CAAd,EAAiB,CAAjB,EAAoBA,IAApB,EAA0B;AAChCI,IAAAA,IAAI,EAAE,YAD0B;AKPxC,ALSQC,IAAAA,IAAI,EAAE,MAF0B;AKAjC,ALGCC,IKHGrB,ALGHqB,IKHO,CLGF,EKHK,ALGH,IKHOV,MAAM,CAACgF,IAAX,CAAgB;AAC9BH,ALDoC,EKCpCA,CLDU,EAIPlE,CKHC,EAAEX,KLDI,CKCE,ALGA,CKHCiF,ALDH,CAAV,IKA8B;AAE9BzF,ALGAe,EKHAf,ALGAe,GAAG,CAACK,CKHC,ALGL,EKHO,CLGCT,GKLsB,GLKhB,CAACS,CAAP,GAAWL,GAAG,CAACf,KAAJ,GAAY,CAA/B;AKFAD,ALGAgB,EKHAhB,ALGAgB,GAAG,CAACM,CAAJ,CKHM,EAAE,ALGAV,GKNsB,GLMhB,CAACU,CAAP,GAAWN,GAAG,CAAChB,MAAJ,GAAa,CAAxB,GAA4B,CAApC;AKFAO,ALGH,EKHGA,KAAK,EAAE,CACHrB,oBADG,EAEHyC,oBAFG,EAGHM,oBAHG,EAIHa,oBAJG,EAKHwB,oBALG,CAJuB;AAW9BqB,EAAAA,OAAO,EAAE;AACLC,ALHD,IKGCA,KLHQrE,EKGD,EAAE,QADJ,ILFN,CAA0BT,IAA1B,EAAgCU,QAAhC,EAA0C;AKIzCqE,ALHJ,IKGIA,ELHApE,GAAG,CKGG,EAAE,ALHFX,IAAI,CAACvB,GAAL,CAASF,KAAT,CAAeyB,IAAI,CAAChB,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GAA2B,GAA1C,EAA+Ca,IAAI,CAAChB,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,GAA3E,EAAgF,aAAhF,EAA+FoB,QAA/F,CAAwG,CAAxG,CAAV;AKIQ0E,ALHRrE,EAAAA,GAAG,CKGKqE,ALHJ/E,OKGW,EAAE,KADL,ALFZ;AKIQgF,ALHRtE,EAAAA,EDjBSvC,CCiBN,CKGK6G,ALHJpG,EAAJ,CAAO,IKGQ,EAAE,KLHjB,EAAoB,YAAM;AKGP2B,ALFf,QKEeA,ALFXE,CKEY,EAAE,KLFlB,EAAc;AKED,ALDTE,IElBCO,ACAAa,ACAAwB,EJkBD5C,aAAa,CAACF,QAAD,CAAb;AKDI,ALEP;AKJI,GAXqB,CJJrBG;AIsBTqE,ANtBA,ACoBIlF,EKEJkF,ELFIlF,IKEE,ALFE,CAACP,CKED,ILFJ,CAAWC,KAAX,CAAiB7B,EDpBP,OCoBWC,MAAJ,CAAWE,IAA5B;AKGAmH,ANvBU,ACqBb,GALD,CKOIA,QAAQ,EAAE;AADN,AHrBR,ACAA,ACAA,AJqBA,SAAOxE,GAAP,WErBc,ACAA,ACAA;ACGgB,AHHhB,ACAA,AJDA,AKCA,AJsBjB,CKnBiB,CAAX,gFNHO;AACFtC,AEDR,MFCQA,GAAG,EAAER,SAAIC,GEDH,GFCD,CAAWC;AGDV,ACAA,AJAJ,AEAI,AGAA,KLDA,6EGEJ,ACAA,ACAA;AFCFM,ACAAA,AJCP,AKDOA,MFAAA,ACAAA,ACAAA,GFAG,ACAA,ACAA,EFAER,ACAAA,ACAAA,SFAIC,ACAAA,ACAAA,MFAJ,ACAA,ACAA,CFAWG,ACAAC,ACAAC;AFDd,ACAA,AFDI,AGCJ,KFDI,ACAA,ACAA,6EHCJ;ACGT,ACAA,AFFOE,AGEP,MHFOA,GAAG,EAAER,SAAIC,MAAJ,CAAWE;AADd,KADI;AAIb,2BFAM,CAEN;;2BGDM,ACAA,ACAA,CFEN,AEAA;ADDG,UAAIiE,OAAJ,aJCM;AIAN,AJAM,UIAFC,SAAJ,QFFG,CACN;AEEA,8BDAS,AEAA,CFET;AHFG,AKCA,UAAIH,UAAU,GAAG,6BAAiB,IAAjB,CAAjB;ALAA,AKCH,WLDQzD,IAAL,CAAUC,KAAV,CAAgB,OEFX,GFEL,EAA4B,6BAA5B;AACA,AEFA,UAAIuC,CFECxC,GEFG,CFER,CAAUC,CEFC,IFEX,CAAgB,AEFAE,GAAL,CAASsB,GCGf,CCFC,AFDK,CAAc,CAAd,EAAiB,CFE5B,EAA+B,EEFEf,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,GAA7C,EAAkD,EFE7D,YEFW,EAAkE;ACI7E,ACFA,AJCA,AEFIiB,QAAAA,ECGAjB,CCFCZ,AJCAA,CEFG,EAAE,CECV,AJCA,CGCU,ACFAC,AJCAA,GGCG,CAAb,CCFA,AJCA,CIDgB,AJCA,IEH6D,EEE7E,EAAwB,KJCxB,EAA+B,yBAA/B,EAJM,CIGN,AJEA;AGCA,ACFA,AFDI6B,QAAAA,ECGAgB,ACFAW,EFDI,EAAE,CCGD,GAAG,EAAZ,ACFc,AFH+D,GEG5D,MCAZ,uBDA6B,IAAjB,CAAjB;ADGA,ACFH,AJCG,AEFI1B,AGAC,QHADA,ECGAjB,AHDAZ,GEFK,EAAE,ICGE,CHDC,EGCE,CAAhB,AHDiB,KAAKC,GAAL,CAASC,QAAT,CAAkB;AAC/BC,AENyE,OAAlE,CFMPA,CEFD2B,QFEU,AENF,CAIC,CFEG,AENJ,CAAX;ACOA,AHAQ1B,AEFRkC,AGDA,MHCAA,IFEQlC,AEFJ,AGDE6E,CFGD,ADFAlD,CAAL,GCESlB,AHAI,AEFJ,CCEC,CHAK,EGAF,CDFCL,CCEd,EAAiBK,CAAC,ADFT,AGDW,CHCDJ,EGDI,CFGD,AEHE,CFGxB,EAAyBI,CAAC,CDFjB,AGDc,CFGvB,ADF4BF,CGDG,CFGD,GDFrB,CGDc,EHCa,AGDE,CHC7B,GAA+B2B,CGDjB,EAAsB,CHCD,CAAC3B,GGDtB,CAAvB,CHCwC,GAAa,CAArD;ACGI,AHFW,AEAf,AGDA,UAAIuE,CHCCjF,CCEG4C,CEHR,CHCA,CAAS9C,CCEG,GAAG,CDFf,CAAe,CAAf,ECEoBE,ADFF,CAAlB,ECEe,ADFM,CCEG6C,CCHnB,KDGU,CAAgB,EDF/B,CCEe,CDFkBP,CCEG,KAAK7B,GDFzC,CAA2C,CAA3C,CCEe,CDF+BoB,QAA9C,CAAuD,CAAvD,KCEwDlB,SAAzC,GAAsDkB,QAAtD,CAA+DjB,CAA/D,CAAX;AACA+B,ACHJ,AJDmC,AEEnC,AGDA,OLDiB,CGIbA,AHJJ,EEEIJ,AGDA2C,CDAC1B,EDGI,AEHT,CFGUV,IAAN,ACHJ,CDGeF,CDFD,CEDC,EDGX,ADFa,GEDG5C,EFCEA,CEDP,CAASsB,CFCP,CAASxB,EEDX,CAAc,EAAd,AFCE,CAAe,CEDC,EAAlB,EAAsB,AFCAS,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GAA2B,CAA1C,CEDF,CFC+C,CEDC,IFCIH,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,CAAzE,EAA4E,aAA5E,EAA2FoB,QAA3F,CAAoG,CAApG,CAAjB;ACGIlB,ACHAe,AJIJ,AEHA,AGDA,QFGIf,ACHAe,EFCAc,AGDA2C,CLICtF,CIJG,CCAR,CDAU,CJIV,CAAUO,CGDG,CHCb,CAAa,CEHC,GAAG,KAAKJ,CFGtB,EIL+D,AJKtC,AEHR,CAASF,KAAT,CAAe,GFGNO,EEHWE,IAAL,CFGP,AEHiBC,EFGJ,MEHN,CAAmBE,KAAnB,GAA2B,CAA1C,EAA6C,KAAKH,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,CAA5B,GAAgC,GAA7E,EAAkF,aAAlF,EAAiGoB,QAAjG,CAA0G,CAA1G,CAAjB;ACGIpB,ACHAkB,AJIA5B,AEHJ,AGDA,QFGIU,ACHAkB,AJIA5B,EEHA0C,AGDA2C,EDAI,EDGE,ACHA,IDGI,AHCA,AKJd,CLIe9E,CGDX,ADFU,GAAG,IFGb,CAAoB,AEHFN,CFGlB,EAAuB,AEHV,CAASF,IFGK,CAACS,AEHf,CAAe,GFGL,CAAUC,CEHAD,IAAL,CAAUC,EFGf,CAAmBC,KEHd,CFGL,AEHwBC,GFGI,CAAnD,CEH4B,CFG0B,EEHC,CAA1C,EFG6C,AEHA,CFGCH,IAAL,AEHSA,CFGCC,GEHN,CAAUA,IFGd,CAAmBE,GEHf,CAAmBD,CFGvB,GAA2BJ,EEHvB,GAA4B,CAA5B,CFG1D,EAA0F,AEHA,EFG1F,CEHa,EAAkF,aAAlF,EAAiGwB,QAAjG,CAA0G,CAA1G,CAAjB;ACGC,ACN8D,AJO9D,AEHD,AGDAsB,MAAAA,CDHe,AJKf,CILA,SCGW,CAAC,QHCCZ,IGDK,MHClB,EAAyBnD,SAAIC,MAAJ,CAAWG,IAApC,EAA0C,OAA1C,EAAmD,IAAnD;AECA,AJIA,AEJA,AGDI,WDCCiE,AJIA5D,CKLGoF,GLKR,AKLI,CLKM7E,CKLG,CLKb,CAAa,CIJb,ECDiB,CDCA,ACDCiF,GHCL7C,EEASxC,CJItB,CKLa,CDCI,AJIQ,AKLCiF,CDCAxB,ECDb,EHCb,EAAyBrE,GEAR,CAAmB,CJIL,CAC9B,CADD,EAhBM,AEYuBC,CEAZ,AJMjB,CINA,IFAyB,CAAWK,IAApC,EAA0C,sBAA1C,EAAkE,IAAlE;ACEA,ACAA,AFDA,AGDI,UFEAqD,CCACU,CCFGyB,GAAJ,EAAS,GDEb,CAAexB,CCFE,CAAC2B,EFEC,CDDN5C,ECCS,EEFT,CFEb,AEF0ByC,GDE1B,ACFa,CDEgB,CFD7B,EAAyB9F,SAAIC,MAAJ,CAAWI,IAApC,EAA0C,MAA1C,EAAkD,IAAlD;ACEA,ACAIkE,AJIJ,AELH,AGDO,QDEAA,EDAAX,AHIArC,EKNIwE,CDEC,EAAE,ACFP,EAAS,ELMA,GAAG,AKNC,CLMjB,AKNkBE,GFEE,GAAG,CEFV,CAAaF,CFE1B,EEFa;AFGb,ACDalE,UDCTgC,ACDShC,KAAK,CDCR,CCDU,CAAT,CDCE,CAAb;AACA,ACFuB2C,AJKvB,AKNI,UFGAV,ACFmBU,CJKlB,CKNG0B,CDCkB,EAAE,AJKnB1E,CAAC,GAAG,CAAb,EGHgB,AHGAA,CAAC,EGHEuC,CHGC,AKNE,ELMtB,CKNyB6B,CLMDpE,CAAC,EAAzB,EAA6B,CGHC,CAAC,MEHQ,CAAC,KFGH,AEHO,CAAC2E,YAAL,CAAkB,CAAlB,EAAqBP,cAAc,CAAC3B,MAAf,GAAwB,CAA7C,CAAD,CAAnC;AFIAV,ACHO,AJMP,QGHAA,CCJyB,GJOrB/B,CGHC,AHGA,CGHC,CAAD,CAAL,CAASkB,CAAT,AHGU,EAAN,CGHSiB,GHGGnC,CAAC,KAAK,EAAlB,IGHJ,AHG4BA,CAAC,KAAK,EAAlC,EAAsC;AGFtC+B,ACHAkB,AJMI,AKPJ,EHvBmB3C,MC2BnByB,ACHAkB,AFxByB,CAAC1C,GGuBtBW,CFIC,ACHA,ACDA,CFIC,CAAD,ACHE,AJMEjC,CGHT,AEJQ,CFICkC,CAAT,CHGI,CAAUlB,CGHDmC,AEJD,CAACuC,SLOT,GKPI,CAAkB,EFI1B,CEJQ,EAAuB,GAAvB,CAAR,ELOiC5E,SAA7B,sCAAsEC,CAAtE,WAA+E;AGFnF+B,ACJS1B,AJODH,QGHR6B,ECJS1B,EJODH,CGHH,CAAC,CAAD,ACJS,CDId,CAASe,ACJO,GAAT,GJOY,EGHnB,AHGqB,CGHHoB,CHEiE,KGFnF;AACAD,ACLqBY,AJQb7C,AKRR,QFKAiC,ECLqBY,EJQb7C,AKRJgB,CDAoB,ACAnB,EDAqB,CCAlB,KAAI,CLQM,AKRLwD,EFKG,AHGI,IGHA,EAApB,IELQ,CAAkB,GAAlB,EAAuB,GAAvB,CAAR;AFMAtC,ACNO,AJM4E,QGAnFA,CCRyB,EJQrB,GGAE;AACNN,ACNAmB,AJSInD,AKTJ,QFMAgC,ACNAmB,EJSInD,EKTAyE,CFMC,ACNA,CDMChC,CCNC,EAHkB,EDSzB,AHGa,CKTD,GAAG,KAAI,CAACmC,YAAL,CAAkB,EAAlB,EAAsB,EAAtB,CAAf;ADCAxB,AJSC,QITDA,aAAa,EAAE,CAAC,GAJS;ADUzB,ACLAC,AJSH,AKVG,OLlBE,CImBFA,AJUJ,IGLQ,CAACrB,ACLA,EAAE,CCDA2C,EFMG,CAACjC,MAAX,EAAmB,GENnB;AFOIlB,ACNK8B,ACAL,UFMA9B,ACNK8B,GAAG,EAAE,ACALe,CDAM,EAAR,KDMU,CAAC9B,KENK,CAAC,CAAD,CAAnB,IFMa,CAAb;AACH,ACPkBgB,ACCXe,UDDWf,ECCXe,CDDc,EAAE,ACCb,CDDc,ECCX,KAAI,CAACO,YAAL,CAAkB1D,CAAlB,EAAqBC,CAArB,CAAN;AFOX,ACRU,AJWX,AKTYmD,OFJkB,EAU3B,ACb0B,EJgBxBrF,CKTOqF,CFJkB,CAA9B,CHaA,AKTe,CLSLpF,EKTQ,GLSlB,CAAgB,CKTM,CAAC2F,KLSvB,EAAyB,IKTP,CAAiBR,GAAG,CAACnD,CAAJ,GAAQmD,GAAG,CAACvE,KAAZ,GAAoB,EAArC,EAAyCqB,CAAzC,ELSlB,AKT8DqD,QAA5C,CAAN;AFOZ,ACRIjB,AJWJ,AKTYgB,QDFRhB,EDQAb,CHGCzD,CKTOsF,EDFF,CJWV,AKTe,CDFH,AJWFrF,EKTQ,EFMJ,CHGd,CAAgB,CGHC,AENK,CAAC0F,KLSvB,EAAyB,KKTP,CAAkBN,GAAG,CAACpD,CAAJ,GAAQoD,GAAG,CAACxE,GFMd,EENE,EFMnB,CENuC,CFMhBwC,CHGxC,AKToC,GAAyBkC,QFM5C,AENC,CFMlB,CENuErD,CAArD,CAAN;AFOf,ACTiBkC,AJYd,AKTY,UDHEA,CJYTpE,EIZY,EAAE,AJYnB,CIZoB,AJYVC,GIZE,EJYZ,CAAgB,OAAhB,EAAyB,4BAAzB;AIZyBoE,AJazB,UIbyBA,CJapBrE,EIbuB,EAAE,AJa9B,CAAUC,KAAV,CAAgB,OAAhB,EAAyB,4BAAzB;AIbY,AJcZ,AKVQ,SDVqB,EJoBxBD,IAAL,AKVamF,CLUHlF,KAAV,CAAgB,OAAhB,AKV2B,CAAC,CLUH,AKVE,CAAnB,gCLUR;AIbIsE,AJcJ,AKVYa,QDJRb,GJcCvE,CKVOoF,GLUZ,AKVe,CDJH,AJcFpE,EIdI,ACII,KAAI,CAAC2E,GLUvB,CAAsB,MAAtB,EAA8B,AKVZ,CAAkB1D,CAAlB,EAAqBC,CAArB,CAAN,2BLUZ,EAAiE;AIdjDkC,AJeZnD,AKVQoE,EFlCWhE,MAAM,AH4CzBJ,CG5C0BK,CC6Bd8C,ECKJiB,CDLO,EAAE,ACKN,GAAG,CDLJ,AJeC,EAAE,EKVK,CLS2C,AKT1CM,YAAL,CAAkBP,GAAG,CAACnD,CAAJ,GAAQ,GAA1B,EAA+BC,CAA/B,CAAN;ADLemC,AJgBvBnD,AKVQoE,QLURpE,EIhBuBmD,ECMfiB,CDNkB,EAAE,ACMjB,GLUD,AKVI,ELUF,GKVM,CAACK,YAAL,CAAkBN,GAAG,CAACpD,CAAJ,GAAQ,GAA1B,EAA+BC,CAA/B,CAAN;ADNE,AJcmD,AKPrD,OLOZ,EIrB6B,AJdvB,CAuCN;AIjBIsC,QAAAA,SAAS,EAAE,K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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: 'LOAD',\r\n        MENU: 'MENU',\r\n        CARD: 'CARD',\r\n        FIRE: 'FIRE',\r\n        TOOL: 'TOOL'\r\n    }\r\n}","import { CST } from '../CST';\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n    init() {\r\n\r\n    }\r\n    preload() {\r\n        // MAIN MENU\r\n        this.load.image('title_bg', './assets/image/title_bg.jpg');\r\n        this.load.image('menu_button', './assets/image/menu_button.png');\r\n        this.load.image('back_button', './assets/image/back.png');\r\n        // LOADING BAR\r\n        let loadingBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff\r\n            }\r\n        });\r\n\r\n        this.load.on('progress', (percent) => {\r\n            loadingBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percent, 50);\r\n        });\r\n\r\n        this.load.on('complete', () => {\r\n        });\r\n        // CARDS\r\n        let cardIndex = 0;\r\n        for (let i = 0; i < 55; i++) {\r\n            if (i !== 13 && i !== 27 && i !== 41) {\r\n                this.load.spritesheet(`card${cardIndex}`, `assets/sprite/cards/tile0${i}.png`, {\r\n                    frameHeight: 96,\r\n                    frameWidth: 72\r\n                });\r\n                cardIndex++;\r\n            }\r\n        }\r\n        // FIRE\r\n        this.load.image('space', 'assets/particles/starfield.jpg');\r\n        this.load.image('fire1', 'assets/particles/fire1.png');\r\n        this.load.image('fire2', 'assets/particles/fire2.png');\r\n        this.load.image('fire3', 'assets/particles/fire3.png');\r\n        this.load.image('smoke', 'assets/particles/smoke-puff.png');\r\n        this.load.spritesheet('ball', 'assets/particles/plasmaball.png', {\r\n            frameHeight: 128,\r\n            frameWidth: 128\r\n        });\r\n        // TOOL\r\n        this.load.spritesheet('euro', 'assets/sprite/euro.png', {\r\n            frameHeight: 128,\r\n            frameWidth: 128\r\n        });\r\n    }\r\n    create() {\r\n        this.scene.start(CST.SCENES.MENU);\r\n    }\r\n}","import { CST } from '../CST';\r\n\r\nexport default function createButton(button, scene, text, that) {\r\n    button.setInteractive();\r\n    button.on('pointerup', () => {\r\n        that.scene.start(scene);\r\n    });\r\n    let txt = that.add.text(0, 0, text, {\r\n        font: '20px Arial',\r\n        fill: '#fff',\r\n        align: 'center'\r\n    }).setDepth(2);\r\n    txt.x = button.x - txt.width / 2;\r\n    txt.y = button.y - txt.height / 2 - 7;\r\n}\r\n\r\nexport function createBackButton(that, interval) {\r\n    let btn = that.add.image(that.game.renderer.width - 128, that.game.renderer.height - 128, 'back_button').setDepth(0);\r\n    btn.setInteractive();\r\n    btn.on('pointerup', () => {\r\n        if (interval) {\r\n            clearInterval(interval);\r\n        }\r\n        that.scene.start(CST.SCENES.MENU);\r\n    });\r\n    return btn;\r\n}","import { CST } from '../CST';\r\nimport createButton from './utils';\r\n\r\nexport class MenuScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.MENU\r\n        })\r\n    }\r\n    init() {\r\n    }\r\n    create() {\r\n        let logo = this.add.text(0, this.game.renderer.height * 0.2, 'Gamanza Test', {\r\n            font: '48px Arial',\r\n            fill: '#fff',\r\n            align: 'center'\r\n        }).setDepth(1);\r\n        logo.x = this.game.renderer.width / 2 - logo.width / 2;\r\n        this.add.image(0, 0, 'title_bg').setOrigin(0).setDepth(0);\r\n        let cardButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2, 'menu_button').setDepth(1);\r\n        let toolButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2 + 100, 'menu_button').setDepth(1);\r\n        let fireButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2 + 200, 'menu_button').setDepth(1);\r\n        createButton(cardButton, CST.SCENES.CARD, 'Cards', this);\r\n        createButton(toolButton, CST.SCENES.TOOL, 'Image/Text Generator', this);\r\n        createButton(fireButton, CST.SCENES.FIRE, 'Fire', this);\r\n    }\r\n}","import { CST } from '../CST';\r\nimport { createBackButton } from './utils';\r\n\r\nexport class CardScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.CARD\r\n        })\r\n    }\r\n    init() {\r\n        \r\n    }\r\n    preload() {\r\n\r\n    }\r\n    create() {\r\n        let height = 0;\r\n        let cards = [];\r\n        let cardIndex = 0;\r\n        for (let i = 51; i >= 0; i--) {\r\n            let card = this.add.sprite(100, 50 + height, `card${cardIndex}`).setDepth(i);\r\n            cards.push(card);\r\n            cardIndex++;\r\n            height += 10;\r\n        }\r\n        let secondDeckWidth = 500;\r\n        let secondDeckHeight = 680;\r\n        let sDepth = 0;\r\n        let cardInterval = setInterval(() => {\r\n            cards[0].x = secondDeckWidth;\r\n            cards[0].y = secondDeckHeight;\r\n            cards[0].setDepth(sDepth);\r\n            secondDeckHeight -= 10;\r\n            sDepth++;\r\n            cards.shift();\r\n            if (!cards.length) {\r\n                clearInterval(cardInterval);\r\n            }\r\n        }, 1000);\r\n        let backButton = createBackButton(this, cardInterval);\r\n    }\r\n}","import { CST } from '../CST';\r\nimport { createBackButton } from './utils';\r\n\r\nexport class FireScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.FIRE\r\n        })\r\n    }\r\n    init() {\r\n        let fpsText;\r\n        let particles;\r\n    }\r\n    preload() {\r\n        this.load.image('fire', 'assets/particles/muzzleflash3.png');\r\n        let backButton = createBackButton(this);\r\n    }\r\n    create() {\r\n        this.fpsText = this.add.text(10, 10, 'FPS: -- \\n-- Particles', {\r\n            font: 'bold 26px Arial',\r\n            fill: '#ffffff'\r\n        });\r\n    \r\n        this.particles = this.add.particles('fire');\r\n    \r\n        this.particles.createEmitter({\r\n            alpha: { start: 1, end: 0 },\r\n            scale: { start: 0.5, end: 2.5 },\r\n            speed: 20,\r\n            accelerationY: -300,\r\n            angle: { min: -85, max: -95 },\r\n            rotate: { min: -180, max: 180 },\r\n            lifespan: { min: 1000, max: 1100 },\r\n            blendMode: 'ADD',\r\n            frequency: 110,\r\n            maxParticles: 10,\r\n            x: 400,\r\n            y: 300\r\n        });\r\n    }\r\n    update(time, delta) {\r\n        this.fpsText.setText('FPS: ' + (1000/delta).toFixed(3) + '\\n' + this.particles.emitters.first.alive.length + ' Particles');\r\n    }\r\n}","import { CST } from '../CST';\r\nimport { createBackButton } from './utils';\r\n\r\nexport class ToolScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.TOOL\r\n        })\r\n    }\r\n    init() {\r\n\r\n    }\r\n    preload() {\r\n        let backButton = createBackButton(this);\r\n    }\r\n    create() {\r\n        const configurations = ['STS', 'SSS', 'SST', 'TST'];\r\n        let el1;\r\n        let el2;\r\n        let el3;\r\n        let fontSize;\r\n        setInterval(() => {\r\n            if (el1) this.destroy(el1);\r\n            if (el2) this.destroy(el2);\r\n            if (el3) this.destroy(el3);\r\n            let selectedConfig = configurations[this.getRandomInt(0, configurations.length - 1)];\r\n            let x = this.getRandomInt(100, 650);\r\n            let y = this.getRandomInt(100, 650);\r\n            let fontSize = this.getRandomInt(14, 42);\r\n            switch(selectedConfig) {\r\n                case configurations[0]:\r\n                    el1 = this.displayImage(x, y);\r\n                    el2 = this.displayText(el1.x + el1.width - 78, y, fontSize);\r\n                    el3 = this.displayImage(el2.x + el2.width + 20 + fontSize, y);\r\n                    break;\r\n                case configurations[1]:\r\n                    el1 = this.displayImage(x, y);\r\n                    el2 = this.displayImage(el1.x + 100, y);\r\n                    el3 = this.displayImage(el2.x + 100, y);\r\n                    break;\r\n                case configurations[2]:\r\n                    el1 = this.displayImage(x, y);\r\n                    el2 = this.displayImage(el1.x + 100, y);\r\n                    el3 = this.displayText(el2.x + el2.width - 78, y, fontSize);\r\n                    break;\r\n                case configurations[3]:\r\n                    el1 = this.displayText(x, y, fontSize);\r\n                    el2 = this.displayImage(el1.x + el1.width + 50, y);\r\n                    el3 = this.displayText(el2.x + el2.width - 78, y, fontSize);\r\n                    break;\r\n            }\r\n        }, 2000);\r\n        \r\n    }\r\n    getRandomInt(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n    destroy(el) {\r\n        if (el.type === 'Sprite') {\r\n            el.destroy();\r\n        }\r\n        if (el.type === 'Text') {\r\n            el.setVisible(false);\r\n        }\r\n    }\r\n    displayImage(x, y) {\r\n        return this.add.sprite(x, y, `euro`).setScale(0.5);\r\n    }\r\n    displayText(x, y, fontSize) {\r\n        return this.add.text(x, y, 'Sample text', {\r\n            font: `${fontSize}px Arial`,\r\n            fill: '#fff',\r\n            align: 'center'\r\n        });\r\n    }\r\n}","/** @type {import(\"../typings/phaser\")} */\r\nimport { LoadScene } from './scenes/LoadScene';\r\nimport { MenuScene } from './scenes/MenuScene';\r\nimport { CardScene } from './scenes/CardScene';\r\nimport { FireScene } from './scenes/FireScene';\r\nimport { ToolScene } from './scenes/ToolScene';\r\n\r\nexport let game = new Phaser.Game({\r\n    type: Phaser.WEBGL,\r\n    width: 1024,\r\n    height: 768,\r\n    scene: [\r\n        LoadScene,\r\n        MenuScene,\r\n        CardScene,\r\n        FireScene,\r\n        ToolScene\r\n    ],\r\n    physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n            useTree: false,\r\n            gravity: { y: 100 }\r\n        }\r\n    },\r\n    render: {\r\n        pixelArt: true\r\n    }\r\n});"]}