{"version":3,"sources":["src/CST.js","src/scenes/LoadScene.js","src/scenes/utils.js","src/scenes/MenuScene.js","src/scenes/CardScene.js","src/scenes/FireScene.js","src/scenes/ToolScene.js","src/scenes/StarFluidScene.js","src/main.js"],"names":["CST","SCENES","LOAD","MENU","CARD","FIRE","TOOL","START_FLUID","LoadScene","key","load","image","loadingBar","add","graphics","fillStyle","color","on","percent","fillRect","game","renderer","height","width","cardIndex","i","spritesheet","frameHeight","frameWidth","atlas","scene","start","Phaser","Scene","createButton","button","text","that","setInteractive","canvas","style","cursor","txt","font","fill","align","setDepth","x","y","createBackButton","interval","btn","clearInterval","setScale","MenuScene","bg","setOrigin","logo","starFluidButton","CardScene","cards","card","sprite","push","secondDeckWidth","secondDeckHeight","sDepth","cardInterval","setInterval","shift","length","backButton","FireScene","fpsText","particles","createEmitter","alpha","end","scale","speed","accelerationY","angle","min","max","rotate","lifespan","blendMode","frequency","maxParticles","time","delta","setText","toFixed","emitters","first","alive","ToolScene","el1","destroy","el2","el3","configurations","fontSize","generatorInterval","selectedConfig","getRandomInt","displayImage","displayText","Math","ceil","floor","random","el","type","setVisible","StarFluidScene","backgroundAnim","window","innerWidth","innerHeight","anims","create","frames","frame","frameRate","repeat","play","Game","WEBGL","physics","default","arcade","useTree","gravity","render","pixelArt"],"mappings":";;;;;;AAAO,IAAMA,GAAG,GAAG;AACfC,AQAJ,AJDA,ACAA,AJAA,AEAA,AIAA,ADAA,ENCIA,MAAM,EAAE;AACJC,AEDR,IFCQA,IAAI,EAAE,MADF;AAEJC,AQDR,AJDA,ACAA,AFAA,AGAA,INEQA,IAAI,EAAE,MAFF;AAGJC,AEJR,IFIQA,IAAI,EAAE,MAHF;AAIJC,AQFR,ANAe,IFEPA,IAAI,CEFY6B,CFEV,MAJF,KEEG,CAAsBC,MAAtB,EAA8BL,KAA9B,EAAqCM,IAArC,EAA2CC,IAA3C,EAAiD;AFGxD/B,AEFJ6B,EAAAA,EFEI7B,IAAI,AEFF,CAACgC,CFEG,MALF,OEGR;AFGI/B,AQHR,ANCI4B,EAAAA,EFEI5B,IEFE,CAACU,EAAP,CAAU,GFEK,EAAE,MEFjB,EAAuB,YAAM;AFJrB,AEKJoB,IAAAA,IAAI,CAACP,KAAL,CAAWC,KAAX,CAAiBD,KAAjB;AFNW,AQKnB,ANEK,CFPE,EEKH;AAGAK,EAAAA,MAAM,CAAClB,EAAP,CAAU,aAAV,EAAyB,YAAM;AMFnC,ANGQoB,IAAAA,IAAI,CAACjB,IAAL,CAAUmB,MAAV,CAAiBC,KAAjB,CAAuBC,MAAvB,GAAgC,SAAhC;AACH,GAFD;AMRJ,ANWIN,EAAAA,MAAM,CAAClB,EAAP,CAAU,YAAV,EAAwB,YAAM;AMH3B,ANICoB,IMJGjB,ANIHiB,IMJO,ANIH,CAACjB,EMJK,ENIV,CAAUmB,CMJIP,KNId,CMJoB,ANIHQ,CMJIuF,IAAX,ANIV,CMJ0B,ANIHtF,MAAvB,GAAgC,SAAhC;AMHJwE,ANIC,EMJDA,CNEA,GMFI,EAAEjF,MAAM,CAACgG,KADiB;AAE9BzG,ANIA,EMJAA,INIImB,CMJC,EAAE2E,ANIA,GAAGhF,GMJG,CAACiF,ANIA,CAACzG,GAAL,CAASuB,IAAT,CMJH,ANIiB,CAAd,EMJiB,ANIA,CAAjB,CMNoB,CNMAA,IAApB,EAA0B;AMHpCd,ANIIqB,EMJJrB,ENIIqB,IMJE,ANIE,EMJA0E,ANIE,MMJI,CAACE,KNGqB,MMH5B,GAAqB,EAHC;AAI9BzF,ANIIc,EMJJd,ENIIc,GMJC,CNIG,CMJD,CACHpC,ANGM,MAF0B,cMF7B,EAEH8C,oBAFG,EAGHK,oBAHG,EAIHa,oBAJG,EAKHwB,oBALG,EAMHmB,8BANG,CAJuB;AAY9Bc,ANHIpF,EMGJoF,ENHIpF,KMGG,ANHE,EMGA,ANHE;AMIPqF,ANPgC,GAA1B,CMONA,CNHDpF,MMGQ,EAAE,ANPH,CAIE,CAJF,CAAV,KMMS;AAELqF,ANHJzF,EAAAA,EMGIyF,APpBK3H,AMAA2G,CLiBN,CAACpE,CAAJ,GMGU,ANHFZ,EMGI,INHE,CAACY,CAAP,GAAWL,GAAG,CAACnB,KAAJ,GAAY,CAA/B;AMIQ6G,ANHR1F,EAAAA,GAAG,CMGK0F,ANHJpF,CAAJ,GAAQb,GMGO,EAAE,CNHH,CAACa,CAAP,EMEI,CNFON,GAAG,CAACpB,MAAJ,GAAa,CAAhC;AMIQ+G,ANHX,IElBY1E,ACAAa,ACAAwB,EEqBDqC,OAAO,EAAE;AAAErF,APrBnB,AMAA,QCqBmBA,CAAC,EAAE,YPrBR,KMAA;ACqBG,APrBH,AMAA,ALoBX,ICpBMM,KDoBGL,gBAAT,CAA0BZ,IAA1B,EAAgCa,QAAhC,EAA0C;AMDjC,AJlBZ,ACAA,ACAA,AJoBA,MAAIC,GAAG,GAAGd,IAAI,CAACxB,GAAL,CAASF,EEpBL,ACAA,ACAA,GJoBJ,CAAe0B,IAAI,CAACjB,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GAA2B,EAA1C,EAA8Cc,IAAI,CAACjB,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,EAA1E,EAA8E,aAA9E,EAA6FwB,QAA7F,CAAsG,CAAtG,CAAV;AMJS,AJhBK,ACAA,AJDA,AMAA,ADCA,AJqBdK,EAAAA,CMjB8B,ENiB3B,CAACb,cAAJ,8DDrBU,KMAA;ACuBVgG,APtBQ7H,AEDR,AIAWA,ALsBX0C,EMCAmF,ANDAnF,GAAG,CDrBK1C,AMDGA,ALsBPQ,EMCE,ANDN,CDrBW,AMDG,ALsBP,CMCC,CPtBKjB,AMDGA,SNCCC,AMDGA,ALsBpB,EAAoB,CCtBN,GFCD,AMDG,CNCQC,AMDGK,OLsBD;AMEtBgI,AJxBU,ACAA,AJAJ,AEAI,AIAJ,ADAI,AJuBV,IMCAA,CPzBU,AMAA,GLwBNrF,IMCI,EAAE,ENDV,EAAc,gEEtBR,ACAA,ACAA;AEsBF,AJrBAzC,ACAAA,AJCP,AMFA,ADCOA,AJsBA2C,MEtBA3C,ACAAA,ACAAA,AJsBA2C,GEtBG,ACAA,ACAA,EFAEpD,ACAAA,ACAAA,QJsBQ,CEtBJC,ACAAA,ACAAA,AJsBKiD,MEtBT,ACAA,ACAA,CFAW9C,ACAAC,ACAAC,CJsBH,CAAb;AMpBsB,AJHpB,ACAA,AFDI,AGCJ,AJwBL,CMrBS,CAAX,GJJW,ACAA,ACAA,6EHCJ;ACGT,ACAA,AFFOG,AGEP,MHFOA,GAAG,EAAET,SAAIC,MAAJ,CAAWE;AADd,ADyBNkC,IAAAA,CC1BU,GD0BN,CAACP,KAAL,CAAWC,KAAX,CAAiB/B,SAAIC,MAAJ,CAAWE,IAA5B;ACtBH,ADuBA,GALD,wBDlBO,CAEN,EMJS,CAET;ALwBDgD,EAAAA,GAAG,CAAClC,EAAJ,CAAO,aAAP,EAAsB,YAAM;AACxBoB,IAAAA,IAAI,CAACjB,IAAL,CAAUmB,MAAV,CAAiBC,KAAjB,CGxBG,AHwBoBC,GExBjB,AEAA,GJwBN,GAAgC,SAAhC;AEvBA,ACAA,ACAA,AJwBH,GAFD,OGtBQgC,CDAC5D,AEAAA,GFAL,AEAA,CFASF,AEAAA,EDAT,GDAA,AEAA,CFAe,AEAA,CFAf,AEAA,EFAkB,AEAA,CFAlB,AEAA,EFAqB,AEAA,ECDhB,CNEC,OGDN,AEAA,EFAiC6C,AEAAA,SFAjC,AEAA,CFA2C,AEAA,CFA3C,AEAA,EFA8CV,AEAAA,QFA9C,AEAA,CFAuD,AEAA,CFAvD,AEAA;AFCH,ACAG,AJAM,AMDN,ADCH,AJwBDK,EAAAA,GAAG,CAAClC,EAAJ,CAAO,CGxBCyD,CEDC0C,QFCL,EHwBJ,EAAqB,EKzBjB,GAAsB,CJDjB,IICsBvG,ELyBJ,CKzBD,CAASiD,MAAT,CAAgBuD,MAAM,CAACC,UAAP,GAAoB,CAApC,EAAuCD,MAAM,CAACE,WAAP,GAAqB,CAA5D,EAA+D,gBAA/D,EAAiF,aAAjF,CAAtB,CADK,CAEL;AFCH,AFFG,AIEA,ALwBAlF,IAAAA,IAAI,CAACjB,CC1BCmC,EAAE,CD0BR,CAAUhB,CC1BC,KAAK1B,AD0BhB,CAAiB2B,EC1BN,CAAS7B,ED0BpB,CAAuB8B,EC1BZ,CAAe,CAAf,EAAkB,AD0B7B,CC1BW,EAAqB,AD0BA,SAAhC,CC1BW,EAAiCe,SAAjC,CAA2C,CAA3C,EAA8CV,QAA9C,CAAuD,CAAvD,CAAX;AFEA,AEDA,AIEA,ALwBH,GAFD,OCxBQW,IAAI,GAAG,KAAK5C,GAAL,CAASuB,IAAT,CAAc,CAAd,EAAiB,KAAKhB,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,GAA7C,EAAkD,OAAlD,EAA2D;AFEtE,AEDIqB,AIEJ,ALwBJQ,EAAAA,GAAG,CAACE,EC1BIV,GFCCjC,CEDG,EAAE,AD0Bd,CDzBI,ACyBS,CDzBCC,ECyBd,GDzBI,CAAgB,IEFsD,GCCjE,AEAA,GLCL,EAA4B,6BAA5B;AGAA,AHCA,AEDIiC,AIEJ,ADHK,AJ2BT,QC1BQA,CD0BDO,CE1BC7B,CHCCZ,CEDG,AD0BZ,EC1Bc,CFCV,CGDU,AHCAC,GGDG,CAAb,ADFsE,CFGtE,CAAgB,QIDV,KJCN,EAA+B,gCAA/B;AGAA,ACAA,AJCA,AEDIkC,AIEJ,ALwBP,QC1BWA,ECAAe,CCAC/C,AJCAH,EEDI,CEAT,CDAS,ACAAC,AJCT,AEDW,CFCDA,EGDE,EAAZ,ACAA,CAAe,AJCf,CIDA,AJCgB,EIDE,CAAlB,EAAqB,QJCrB,EIDA,AJC+B,EIDE6C,SAAjC,CAA2C,CAA3C,EAA8CV,QAA9C,CAAuD,CAAvD,AJCA,EAJM,CAKN;AGDA,ACAA,AFJsE,AIMtE,ADJA,OHFW,EAIRA,CCACtB,AEFAyE,CDECvF,ECFL,EDEA,ACFS,CDECC,CFJC,CAIC,CCAC,ADJF,CAAX,AGEcuF,CDEd,CDAgB,ACAA,CDAhB,IEFS,CDET,ACFsBD,EDEE,CCFf,kCDET;AACA,AJCA,AEDAxC,AGFA,MHEAA,IEAIc,AJCA3D,AEDA,AGFAuF,CHECpD,CAAL,CGFA,EHES,AGFA,KDEK,AJCA,AEDA3B,AGFA8E,GDEG,AJCA,CEDR,CAAU7E,EGFV,CLGaR,AKHAsF,GLGL,AKHR,CLGiBrF,CEDjB,CAAmBS,KAAnB,CFCQ,CAAkB,CEDC,CAA3B,GAA+BkC,IAAI,CAAClC,CEAX,IAAjB,AFAuB,CEAxC,EFAqD,CAArD;ACAA,ACCH,AJCOR,AEDJ,AICA,ADHA,QLGIA,EEDA2C,AGFA0C,CFCC,AGEAoB,EDHL,EFCS/F,AEDA,CFCC,AGEV,CNAa,AMAFgG,EHFE,AHEE,CKHDvB,CFCd,EAAiBzE,AGEjB,CHFkB,AGEA,CJDC,EGFV,CFCa,ADCA,AGFA2E,CFCtB,EAAyB3E,AEDhB,CFCiB,CDCCZ,CCD3B,EAA8B,ADCR,CAASF,KAAT,CAAe,KAAKS,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GAA2B,CAA1C,EAA6C,KAAKH,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,CAAzE,EAA4E,aAA5E,EAA2FwB,QAA3F,CAAoG,CAApG,CAAtB;ACAI,AHEI9B,AEDR,AICIP,ADHJ,QCGIA,ENAIO,AKHFqF,CCGC,CHFCxC,CGEC,ENAI,CGFD,CHEG,EGFA,CGCG,IHDEhD,AEDA,EHEP6C,CCDE,AEDQ,CFCCI,AEDA,KAAD,CFCR,CAAgB,AEDA,GFChB,EAAqB,AEDb,CHEvB,CGFsC,CHER9D,GCDYsB,CEDnB,EAAsB,GFC9B,ADCmBrB,EGFX,CAAvB,GHE8B,CAAWM,SCDgBiB,EDCzD,EAAsD,KCDvC,GAAuDsB,IDCtE,EAAoE,ECDrD,CAAgErB,CAAhE,ADCf,CCDI;AACAmC,AHAW,AEClB,AICO8D,ADHJ,QFCI9D,AGEA8D,EDHAzB,GFCK,AEDT,CFCUlC,AGEA,EAAE,CACJ,CHHJ,CAAWF,IAAX;AACArC,AHF+B,AMKvBf,ADJZ,OLDiB,CGEbe,AHFJ,EMKYf,ADJR0F,GCIW,ADJf,ECIiB,EHHJ,YCDR,EEGG;AHDJ7E,ACDJ,AJIA,AMAYqG,ADJZ,QFCIrG,EGGQqG,ADJRvB,CDAC3B,AJIA/D,EKJL,CFCU,CHGV,AMAiB,CNAPO,CMAS,CHHL,ACDd,AJIA,CAAa,CGHT,CCDW,KAAKJ,GAAL,AJIf,CIJwBuB,CJIC,GIJV,CAAc,EAAd,EAAkB,EAAlB,AJIWlB,EIJW,KJIZ,EAAa,iBIJvB,EAAgD;ADE9D,ACDGyB,AJIA/B,AMHI,ADDR,QDAI+B,AJIA/B,CMJQ,CDAR0F,CCKI,CFLA,EAAE,IJII,AKJd,CLIenF,QAAX,CAAoB,CAApB,EIL2D,AJKpC,KAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,CAAnD,EAAsD,KAAI,CAACF,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GAA2BL,OAAjF,EAA0F,EAA1F;AIHA0B,AJIH,AMCWnC,ADLZ,EHlBuBuB,KFoBvB,CIFIY,AFlByB,CAACX,CIuBlBxB,ADLR8F,EDAI,CEKO,CFLL,CEKO,YDLI,GAAGnC,CCIhB,UDJ2B,CAAC,YAAM;AFC1C,ACH+D,AJQ/D,AMAYuD,ADLR,ODHW,CAAf,EDGI3D,AGKQ2D,CNAPjH,CKLGuF,GLKR,AMAiB,ADLb,CLKMhF,CMAS,ADLN,CLKb,CAAa,GKLI,CAACiF,EFAC,GAAG,CHKtB,CKLa,CFAb,AHKyB,AKLCD,GAAb,SLKkB,CAC9B,CADD,EAhBM,CAkBN;AGNA,ACCA,AECQ,ADFJ,SCHQ,CHGRhC,CCCCS,AEKG,CDNAyB,GAAJ,EAAS,GDCb,ECDiB,CDCA,ACDCD,GFAE,ECCErF,CDDC,CEAV,CDCI,ACDSsF,CFA1B,ACC0BzB,ECDb,ODCI,CAAmB,MAAnB,CAAjB;ADAA,ACEA,AJIA,AMAYjE,ADNR,UFAAyD,AHMA1C,AMAQf,CFJPiE,CCFG0B,CCMO,EAAE,ADNb,CFAM,CEAG,EFAA,AHMA,CGNb,ACEA,CAAezB,CJIC,AKNC,CLMjB,AKNkBuB,OAAL,CCKL,ADLkBE,GDE1B,ACFa,CDEgB;ADD7B,ACEIxB,AEIQ+C,QFJR/C,EDFAT,AGMQwD,GFJH,EAAE,AEIM,EAAE,KHNH,GAAGvD,WAAW,CAAC,YAAM;AACjCR,ACCS7B,AJIb,AMFQ,ADJJ,QFCA6B,CGNQ,CFOC7B,CJIR,AMEG,CDRAyE,CFCC,CAAC,CAAD,ACCS,AJIT/E,CGLL,AHKM,CGLGsB,ACCO,CDDhB,ACCO,CJIE,CAAb,CGLiBiB,CHKDvC,CAAC,GAAG,AKNE,ELMtB,CKNyB4E,CLMD5E,CAAC,EAAzB,EAA6B,CGLzB,OEDmC,CAAC,KAAI,CAACgF,YAAL,CAAkB,CAAlB,EAAqBJ,cAAc,CAAC/B,MAAf,GAAwB,CAA7C,CAAD,CAAnC;AFEAV,ACAmBiB,AJKnB,AMEQpE,QHPRmD,ECAmBiB,AEOXpE,ENFJgB,CGLC,ACAiB,AJKjB,AMEM,CHPL,CAAD,ACAmB,AEOX,CHPb,CAASuB,CAAT,AHKU,EAAN,CGLSiB,GHKGxC,CAAC,KAAK,CMClB,CNDA,IAAwBA,CGL5B,AHK6B,KAAK,EAAlC,EAAsC;AGJtCmC,ACDO,AJMH,AMEI+D,ADTR,QFEA/D,CCFyB,CESjB+D,EDTJ5E,CFEC,AEFA,CFEC,CAAD,AHKIrC,AMEI,CHPb,AEFQ,CFECoC,AGOM,ENFX,CAAUpB,CKPF,CAAC+E,GFEb,CAAkBvC,KHKd,CGLJ,EEFQ,CAAkB,GAAlB,EAAuB,GAAvB,CAAR,ELOiC1C,SAA7B,sCAAsEC,CAAtE,WAA+E;AGJnFwC,ACDAa,AJMQnD,AMDJ,QHJJsC,ACDAa,CERQ,EAiBJ,CNHInD,CINH,EAAE,QJMY,CGLH,CHKK,EAD8D,CGJ/D,EAApB;AACAuC,ACFSnC,AJODH,AMGAnB,ADXR,QFGAyD,ECFSnC,AEUDtB,ENHAmB,AKRJoB,CCWO,ADXN,CFGC,CCFQ,AEUD,CDXL,CDCQ,GAAT,CCDK,CLQM,AKRLyD,ELQO,OMEhB,GDVI,CAAkB,GAAlB,EAAuB,GAAvB,CAAR;AFIA7C,ACHqBiB,AJK8D,AMM3E8C,QHRR/D,ECHqBiB,AEWb8C,CNNJ,EGFC,ACHmB,CDGlBtD,CCHoB,AEWb,EAAE,EHRf;ACHO,AJSH7C,AMAA,ADTJ,SDFyB,AENjB,CNiBJA,AMnBU,EDUV8E,OLSS,CKTD,GAAG,KAAI,CAACG,YAAL,CAAkB,EAAlB,EAAsB,EAAtB,CAAf;AFIA,ACHA1B,AJSC,AMID6C,QFbA7C,AEaA6C,IHVI,CAAChE,ACHA,EAAE,EAHkB,AEgBhB,CHVC,CAACU,AGUA,EAxBG,IHcd,EAAmB;AACflB,ACHJ4B,AJSH,AMIG6C,ADdA,OLlBE,CImBF7C,AJUJ,AMGI6C,EHVIzE,IGUE,EAAE,ADdDoD,CCcE,IFbI,EDGI,ACHF,CDGGrC,ACHF,GAJS,GCGzB,MFIiB,CAAb;AACH,ACHDc,AEbc,ADYV,OCZR,CFaIA,KAAK,EAAE,ACDEoB,cAAc,CAAC,CAAD,CAAnB;AFKP,ACJYnB,AEcb,ADdYe,OFNkB,EAU3B,CCJUf,CEcRkC,CDdOnB,CFNkB,ACMd,CDNhB,CCMkB,ACAH,CDAI,EAAR,ACAO,KAAI,CAACS,CCcvB,CAAoBoB,IAApB,CAAyB,KDdP,CAAkB/E,CCcpC,ADdkB,EAAqBC,CAArB,CAAN;AFKZ,ACLuBmC,AJUvB,AMKH,ADdegB,UFIR5B,ACLmBY,CJUlBzE,CKTOyF,CDDc,EAAE,AJU5B,AKTe,CDDc,AJUnBxF,EKTQ,EFIJ,CHKd,CAAgB,CGLC,AEJK,CAACgG,KLSvB,EAAyB,IKTP,CAAiBV,GAAG,CAAClD,CAAJ,GAAQkD,GAAG,CAAC1E,IFIb,CEJC,GFIlB,AEJsC,EFIf4C,AEJtB,EAAyCnB,CAAzC,ELSlB,AKT8DsD,OFI7C,CAAjB,AEJkB,CAAN;AFKf,ACNc,AJWX,AKTYF,SDPiB,EJgBxB1F,CKTO0F,GLSZ,AKTe,CLSLzF,EKTQ,GLSlB,CAAgB,CKTM,CAAC+F,KLSvB,EAAyB,KKTP,CAAkBP,GAAG,CAACpD,CAAJ,GAAQoD,GAAG,CAAC5E,KAAZ,GAAoB,ELSxD,AKToC,GAAyB+E,QAA3C,EAAqDtD,CAArD,CAAN;ADDRoC,AJWJ,AKTY,QDFRA,GJWC1E,GIXK,CJWV,CIXY,AJWFC,KAAV,CAAgB,OAAhB,EAAyB,4BAAzB;AIXcuE,AJYd,UIZcA,CJYTxE,EIZY,EAAE,AJYnB,CIZoB,AJYVC,GIZE,EJYZ,CAAgB,OAAhB,EAAyB,4BAAzB;AIZyBwE,AJazB,AKVQ,ECjCoBnD,MAAM,CAACC,CF8BVkD,CJapBzE,EIbuB,EAAE,AJa9B,AKVa2F,CLUH1F,KAAV,CAAgB,OAAhB,AKV2B,CAAC,CLUH,AKVE,CAAnB,gCLUR;AIbY,AJcZ,AKVYsF,EFjCWjE,MAAM,CAACC,ACuBD,EJoBxBvB,CKVOuF,GLUZ,AKVe,CLULvE,EKVQ,KAAI,CAACgF,GLUvB,CAAsB,MAAtB,EAA8B,AKVZ,CAAkB3D,CAAlB,EAAqBC,CAArB,CAAN,2BLUZ,EAAiE;AIb7DqC,AJcA1D,AKVQ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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["export const CST = {\n    SCENES: {\n        LOAD: 'LOAD',\n        MENU: 'MENU',\n        CARD: 'CARD',\n        FIRE: 'FIRE',\n        TOOL: 'TOOL',\n        START_FLUID: 'STAR_FLUID'\n    }\n}","import { CST } from '../CST';\n\nexport class LoadScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.LOAD\n        })\n    }\n    init() {\n\n    }\n    preload() {\n        // MAIN MENU\n        this.load.image('title_bg', './assets/image/title_bg.jpg');\n        this.load.image('menu_button', './assets/image/menu_button.png');\n        this.load.image('back_button', './assets/image/back.png');\n        // LOADING BAR\n        let loadingBar = this.add.graphics({\n            fillStyle: {\n                color: 0xffffff\n            }\n        });\n\n        this.load.on('progress', (percent) => {\n            loadingBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percent, 50);\n        });\n\n        this.load.on('complete', () => {\n        });\n        // CARDS\n        let cardIndex = 0;\n        for (let i = 0; i < 55; i++) {\n            if (i !== 13 && i !== 27 && i !== 41) {\n                this.load.spritesheet(`card${cardIndex}`, `assets/sprite/cards/tile0${i}.png`, {\n                    frameHeight: 96,\n                    frameWidth: 72\n                });\n                cardIndex++;\n            }\n        }\n        // FIRE\n        this.load.image('space', 'assets/particles/starfield.jpg');\n        this.load.image('fire1', 'assets/particles/fire1.png');\n        this.load.image('fire2', 'assets/particles/fire2.png');\n        this.load.image('fire3', 'assets/particles/fire3.png');\n        this.load.image('smoke', 'assets/particles/smoke-puff.png');\n        this.load.spritesheet('ball', 'assets/particles/plasmaball.png', {\n            frameHeight: 128,\n            frameWidth: 128\n        });\n        // TOOL\n        this.load.spritesheet('euro', 'assets/sprite/euro.png', {\n            frameHeight: 128,\n            frameWidth: 128\n        });\n        // Star Fluid\n        this.load.atlas('backgroundAnim', './assets/image/backgroundAnim.png', './assets/image/backgroundAnim.json');\n    }\n    create() {\n        this.scene.start(CST.SCENES.MENU);\n    }\n}","/** @type {import(\"../typings/phaser\")} */\nimport { CST } from '../CST';\n\nexport default function createButton(button, scene, text, that) {\n    button.setInteractive();\n    button.on('pointerup', () => {\n        that.scene.start(scene);\n    });\n    button.on('pointerover', () => {\n        that.game.canvas.style.cursor = \"pointer\";\n    });\n    button.on('pointerout', () => {\n        that.game.canvas.style.cursor = \"initial\";\n    });\n    let txt = that.add.text(0, 0, text, {\n        font: '20px Arial',\n        fill: '#fff',\n        align: 'center'\n    }).setDepth(2);\n    txt.x = button.x - txt.width / 2;\n    txt.y = button.y - txt.height / 2;\n}\n\nexport function createBackButton(that, interval) {\n    let btn = that.add.image(that.game.renderer.width - 64, that.game.renderer.height - 64, 'back_button').setDepth(0);\n    btn.setInteractive();\n    btn.on('pointerup', () => {\n        if (interval) {\n            clearInterval(interval);\n        }\n        that.scene.start(CST.SCENES.MENU);\n    });\n    btn.on('pointerover', () => {\n        that.game.canvas.style.cursor = \"pointer\";\n    });\n    btn.on('pointerout', () => {\n        that.game.canvas.style.cursor = \"initial\";\n    });\n    btn.setScale(0.6);\n    return btn;\n}","import { CST } from '../CST';\nimport createButton from './utils';\n\nexport class MenuScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.MENU\n        })\n    }\n    create() {\n        const bg = this.add.image(0, 0, 'title_bg').setOrigin(0).setDepth(0);\n        let logo = this.add.text(0, this.game.renderer.height * 0.2, 'Stars', {\n            font: '48px Arial',\n            fill: '#fff',\n            align: 'center'\n        }).setDepth(1);\n        logo.x = this.game.renderer.width / 2 - logo.width / 2;\n        let starFluidButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2, 'menu_button').setDepth(1);\n        createButton(starFluidButton, CST.SCENES.START_FLUID, 'Star Fluid', this);\n    }\n}","import { CST } from '../CST';\nimport { createBackButton } from './utils';\n\nexport class CardScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.CARD\n        })\n    }\n    preload() {\n        this.add.image(0, 0, 'title_bg').setOrigin(0).setDepth(0);\n    }\n    create() {\n        let height = 0;\n        let cards = [];\n        let cardIndex = 0;\n        for (let i = 51; i >= 0; i--) {\n            let card = this.add.sprite(100, 100 + height, `card${cardIndex}`).setDepth(i);\n            cards.push(card);\n            cardIndex++;\n            height += 10;\n        }\n        let secondDeckWidth = 500;\n        let secondDeckHeight = 610;\n        let sDepth = 0;\n        let cardInterval = setInterval(() => {\n            cards[0].x = secondDeckWidth;\n            cards[0].y = secondDeckHeight;\n            cards[0].setDepth(sDepth);\n            secondDeckHeight -= 10;\n            sDepth++;\n            cards.shift();\n            if (!cards.length) {\n                clearInterval(cardInterval);\n            }\n        }, 1000);\n        let backButton = createBackButton(this, cardInterval);\n    }\n}","import { CST } from '../CST';\nimport { createBackButton } from './utils';\n\nexport class FireScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.FIRE\n        })\n    }\n    init() {\n        let fpsText;\n        let particles;\n    }\n    preload() {\n        this.add.image(0, 0, 'title_bg').setOrigin(0).setDepth(0);\n        this.load.image('fire', 'assets/particles/muzzleflash3.png');\n        let backButton = createBackButton(this);\n    }\n    create() {\n        this.fpsText = this.add.text(10, 10, 'FPS: -- \\n-- Particles', {\n            font: 'bold 26px Arial',\n            fill: '#ffffff'\n        });\n    \n        this.particles = this.add.particles('fire');\n    \n        this.particles.createEmitter({\n            alpha: { start: 1, end: 0 },\n            scale: { start: 0.5, end: 2.5 },\n            speed: 20,\n            accelerationY: -300,\n            angle: { min: -85, max: -95 },\n            rotate: { min: -180, max: 180 },\n            lifespan: { min: 1000, max: 1100 },\n            blendMode: 'ADD',\n            frequency: 110,\n            maxParticles: 10,\n            x: 400,\n            y: 300\n        });\n    }\n    update(time, delta) {\n        this.fpsText.setText('FPS: ' + (1000/delta).toFixed(3) + '\\n' + this.particles.emitters.first.alive.length + ' Particles');\n    }\n}","import { CST } from '../CST';\nimport { createBackButton } from './utils';\n\nexport class ToolScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.TOOL\n        })\n    }\n    preload() {\n        this.add.image(0, 0, 'title_bg').setOrigin(0).setDepth(0);\n    }\n    create() {\n        if (el1) this.destroy(el1);\n        if (el2) this.destroy(el2);\n        if (el3) this.destroy(el3);\n        const configurations = ['STS', 'SSS', 'SST', 'TST'];\n        let el1;\n        let el2;\n        let el3;\n        let fontSize;\n        let generatorInterval = setInterval(() => {\n            if (el1) this.destroy(el1);\n            if (el2) this.destroy(el2);\n            if (el3) this.destroy(el3);\n            let selectedConfig = configurations[this.getRandomInt(0, configurations.length - 1)];\n            let x = this.getRandomInt(100, 650);\n            let y = this.getRandomInt(100, 650);\n            let fontSize = this.getRandomInt(14, 42);\n            switch(selectedConfig) {\n                case configurations[0]:\n                    el1 = this.displayImage(x, y);\n                    el2 = this.displayText(el1.x + el1.width - 78, y, fontSize);\n                    el3 = this.displayImage(el2.x + el2.width + 20 + fontSize, y);\n                    break;\n                case configurations[1]:\n                    el1 = this.displayImage(x, y);\n                    el2 = this.displayImage(el1.x + 100, y);\n                    el3 = this.displayImage(el2.x + 100, y);\n                    break;\n                case configurations[2]:\n                    el1 = this.displayImage(x, y);\n                    el2 = this.displayImage(el1.x + 100, y);\n                    el3 = this.displayText(el2.x + el2.width - 78, y, fontSize);\n                    break;\n                case configurations[3]:\n                    el1 = this.displayText(x, y, fontSize);\n                    el2 = this.displayImage(el1.x + el1.width + 50, y);\n                    el3 = this.displayText(el2.x + el2.width - 78, y, fontSize);\n                    break;\n            }\n        }, 2000);\n        let backButton = createBackButton(this, generatorInterval);\n    }\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n    destroy(el) {\n        if (el.type === 'Sprite') {\n            el.destroy();\n        }\n        if (el.type === 'Text') {\n            el.setVisible(false);\n        }\n    }\n    displayImage(x, y) {\n        return this.add.sprite(x, y, `euro`).setScale(0.5);\n    }\n    displayText(x, y, fontSize) {\n        return this.add.text(x, y, 'Sample text', {\n            font: `${fontSize}px Arial`,\n            fill: '#fff',\n            align: 'center'\n        });\n    }\n}","import { CST } from '../CST';\n\nexport class StarFluidScene extends Phaser.Scene {\n    constructor() {\n        super({key: CST.SCENES.START_FLUID});\n    }\n    preload() {\n        \n    }\n    create() {\n        this.backgroundAnim = this.add.sprite(window.innerWidth / 2, window.innerHeight / 2, 'backgroundAnim', 'portrait_01');\n        // this.backgroundAnim02 = this.add.sprite(window.innerWidth / 2, window.innerHeight / 2, 'backgroundAnim', 'portrait_02');\n        // this.backgroundAnim03 = this.add.sprite(window.innerWidth / 2, window.innerHeight / 2, 'backgroundAnim', 'portrait_03');\n        // this.backgroundAnim04 = this.add.sprite(window.innerWidth / 2, window.innerHeight / 2, 'backgroundAnim', 'portrait_04');\n        // this.backgroundAnim05 = this.add.sprite(window.innerWidth / 2, window.innerHeight / 2, 'backgroundAnim', 'portrait_05');\n        // var tween = this.add.tween(sprite).to( { alpha: 1 }, 2000, \"Linear\", true, 0, -1);\n        // let frameNames = this.textures.get('backgroundAnim').getFrameNames();\n        // console.log(frameNames);\n        this.anims.create({\n            key: 'fluid',\n            frames: [\n                {\n                    key: 'backgroundAnim',\n                    frame: 'portrait_01'\n                },\n                {\n                    key: 'backgroundAnim',\n                    frame: 'portrait_02'\n                },\n                {\n                    key: 'backgroundAnim',\n                    frame: 'portrait_03'\n                },\n                {\n                    key: 'backgroundAnim',\n                    frame: 'portrait_04'\n                },\n                {\n                    key: 'backgroundAnim',\n                    frame: 'portrait_05'\n                }\n            ],\n            frameRate: 10,\n            repeat: -1\n        });\n        this.backgroundAnim.play('fluid');\n    }\n}","/** @type {import(\"../typings/phaser\")} */\nimport { LoadScene } from './scenes/LoadScene';\nimport { MenuScene } from './scenes/MenuScene';\nimport { CardScene } from './scenes/CardScene';\nimport { FireScene } from './scenes/FireScene';\nimport { ToolScene } from './scenes/ToolScene';\nimport { StarFluidScene } from './scenes/StarFluidScene';\n\nexport let game = new Phaser.Game({\n    type: Phaser.WEBGL,\n    width: window.innerWidth - 20,\n    height: window.innerHeight - 20,\n    scene: [\n        LoadScene,\n        MenuScene,\n        CardScene,\n        FireScene,\n        ToolScene,\n        StarFluidScene\n    ],\n    physics: {\n        default: 'arcade',\n        arcade: {\n            useTree: false,\n            gravity: { y: 100 }\n        }\n    },\n    render: {\n        pixelArt: true\n    }\n});"]}