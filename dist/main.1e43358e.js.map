{"version":3,"sources":["src/CST.js","src/scenes/LoadScene.js","src/scenes/utils.js","src/scenes/MenuScene.js","src/scenes/CardScene.js","src/scenes/FireScene.js","src/scenes/ToolScene.js","src/main.js"],"names":["CST","SCENES","LOAD","MENU","CARD","FIRE","TOOL","LoadScene","key","load","image","loadingBar","add","graphics","fillStyle","color","on","percent","fillRect","game","renderer","height","width","cardIndex","i","spritesheet","frameHeight","frameWidth","scene","start","Phaser","Scene","createButton","button","text","that","setInteractive","canvas","style","cursor","console","log","txt","font","fill","align","setDepth","x","y","createBackButton","interval","btn","clearInterval","setScale","MenuScene","logo","setOrigin","cardButton","toolButton","fireButton","CardScene","cards","card","sprite","push","secondDeckWidth","secondDeckHeight","sDepth","cardInterval","setInterval","shift","length","backButton","FireScene","fpsText","particles","createEmitter","alpha","end","scale","speed","accelerationY","angle","min","max","rotate","lifespan","blendMode","frequency","maxParticles","time","delta","setText","toFixed","emitters","first","alive","ToolScene","configurations","el1","el2","el3","fontSize","destroy","selectedConfig","getRandomInt","displayImage","displayText","Math","ceil","floor","random","el","type","setVisible","Game","WEBGL","physics","default","arcade","useTree","gravity","render","pixelArt"],"mappings":";;;;;;AAAO,IAAMA,GAAG,GAAG;AACfC,AOAJ,AHDA,ACAA,AJAA,AEAA,AGAA,ENCIA,MAAM,EAAE;AACJC,AEDR,IFCQA,IAAI,EAAE,MADF;AAEJC,AODR,AHDA,ACAA,AFAA,AGAA,INEQA,IAAI,EAAE,MAFF;AAGJC,AEJR,IFIQA,IAAI,EAAE,MAHF;AAIJC,AOFR,ALAe,IFEPA,IAAI,CEFY2B,CFEV,MAJF,KEEG,CAAsBC,MAAtB,EAA8BL,KAA9B,EAAqCM,IAArC,EAA2CC,IAA3C,EAAiD;AFGxD7B,AEFJ2B,EAAAA,EFEI3B,IAAI,AEFF,CAAC8B,CFEG,aEFV;AFHQ,AOGZ,ALCIH,EAAAA,MAAM,CAACjB,EAAP,CAAU,WAAV,EAAuB,YAAM;AFLd,AEMXmB,CFND,GEMCA,IAAI,CAACP,KAAL,CAAWC,KAAX,CAAiBD,KAAjB;AKDR,ALEK,GAFD;AAGAK,EAAAA,MAAM,CAACjB,EAAP,CAAU,aAAV,EAAyB,YAAM;AKRnC,ALSQmB,IAAAA,IAAI,CAAChB,IAAL,CAAUkB,MAAV,CAAiBC,KAAjB,CAAuBC,MAAvB,GAAgC,SAAhC;AKFD,ALGCC,IKHGrB,ALGHqB,IKHO,GAAG,ALGH,CAACC,GKHMX,ALGd,CAAYF,KKHQ,ALGpB,CKHqBuF,IAAX,CAAgB;AAC9BF,ALGC,EKHDA,CLAA,GKAI,EAAEnF,MAAM,CAACsF,KADiB;AAE9B9F,ALGAW,EKHAX,ALGAW,KKHK,CLGC,CKHC,ALGAjB,EAAP,CAAU,CKLoB,WLK9B,EAAwB,YAAM;AKF9BK,ALGIc,EKHJd,ELGIc,IKHE,ALGE,CAAChB,CKHD,GAHsB,ALM1B,CAAUkB,MAAV,CAAiBC,KAAjB,CAAuBC,MAAvB,GAAgC,SAAhC;AKFJX,ALGC,EKHDA,CLCA,IKDK,EAAE,CACHrB,oBADG,EAEH+C,oBAFG,EAGHM,oBAHG,EAIHa,oBAJG,EAKHwB,oBALG,CAJuB;AAW9BoB,ALHA,EKGAA,ILHI3E,GKGG,ALHA,EKGE,CLHCP,IAAI,CAACvB,GAAL,CAASsB,IAAT,CAAc,CAAd,EAAiB,CAAjB,EAAoBA,IAApB,EAA0B;AKIhCoF,ALHA3E,IKGA2E,ALHA3E,IAAI,EAAE,CKGC,EAAE,QADJ,CLH2B;AKKhC4E,ALHA3E,IKGA2E,ALHA3E,IAAI,EKGE,ALHA,EKGE,ILLwB;AKM5B4E,ALHJ3E,IAAAA,EKGI2E,GLHC,EAAE,EKGI,EAAE,KADL;AAEJC,ALP4B,GAA1B,CDbDlH,CCiBNuC,CKGK2E,OAAO,ALPL,CAIE,CKGK,ALPP,CAAV;AKOmBzE,ALFnBN,EAAAA,GAAG,CAACK,CAAJ,CKEmBC,CAAC,CLFZf,CKEc,KLFR,CAACc,CAAP,GAAWL,GAAG,CAACpB,KAAJ,GAAY,CAA/B;AKEiB,ALDjBoB,EAAAA,EElBSkB,ACAAa,ACAAwB,CJkBN,CAACjD,CAAJ,GAAQf,MAAM,CAACe,CAAP,GAAWN,GAAG,CAACrB,MAAJ,GAAa,CAAxB,GAA4B,CAApC;AKDY,ALEf;AKJY,GAXqB,CJJrBiC;AIsBToE,ANtBA,ACqBG,EKCHA,MAAM,CLDMzE,CKCJ,aNtBM,ECqBX,CAA0Bd,IAA1B,EAAgCe,QAAhC,EAA0C;AKEzCyE,ANvBU,ACsBd,IKCIA,ELDAxE,GAAG,GKCK,ALDFhB,EKCI,ELDA,CAACvB,GAAL,CAASF,KAAT,CAAeyB,IAAI,CAAChB,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GAA2B,EAA1C,EAA8Ca,IAAI,CAAChB,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,EAA1E,EAA8E,aAA9E,EAA6FyB,QAA7F,CAAsG,CAAtG,CAAV;AKAQ,AHrBR,ACAA,ACAA,AJsBAK,EAAAA,GAAG,CAACf,cAAJ,GEtBc,ACAA,ACAA;ACGgB,AHHhB,ACAA,AJDA,AKCA,AJuBde,CKpBc,CAAX,ALoBHA,GAAG,CAACnC,EAAJ,CAAO,WAAP,EAAoB,YAAM,gDDvBhB;AACFR,AEDR,ADwBI,MDvBIA,ECuBA0C,CDvBG,EAAElD,KCuBT,EAAc,EDvBDC,GEDH,GFCD,CAAWC;AGDV,ACAA,AJAJ,AEAI,AGAA,AJyBNkD,KD1BM,CC0BNA,aAAa,CAACF,QAAD,CAAb,qDExBE,ACAA,ACAA;AFCF1C,ACAAA,AJCP,AKDOA,AJwBH,MExBGA,ACAAA,ACAAA,GFAG,ACAA,ACAA,EFAER,ACAAA,ACAAA,SFAIC,ACAAA,ACAAA,MFAJ,ACAA,ACAA,CFAWG,ACAAC,ACAAC;AFDd,ACAA,AFDI,AGCJ,KFDI,ACAA,ACAA,6EHCJ;ACGT,ACAA,AFFOE,AGEP,AJuBG2B,IAAAA,ECzBI3B,EDyBA,CCzBG,ADyBFoB,ECzBI5B,GDyBT,CAAW6B,KCzBE5B,ADyBb,CAAiBD,KCzBR,CAAWG,GDyBCF,MAAJ,CAAWE,IAA5B;AC1BM,AD2BT,GALD,ECvBc;AAIb,ADyBDgD,EAAAA,GAAG,CAACnC,EAAJ,CAAO,aAAP,EAAsB,GDzBf,CAEN,QCuB2B;AACxBmB,IAAAA,IAAI,CAAChB,IAAL,CAAUkB,MAAV,CAAiBC,KAAjB,CAAuBC,MAAvB,GAAgC,SAAhC;AACH,GAFD,wBExBO,ACAA,ACAA,CFEN,AEAA;ADDG,AH0BJY,EAAAA,GAAG,CAACnC,EAAJ,CAAO,CG1BC0D,OAAJ,IH0BJ,EAAqB,ODzBX,KCyBiB;AGzBvB,AJAM,AC0BNvC,IAAAA,IAAI,CAAChB,CG1BDwD,GH0BJ,CAAUtC,KG1BV,CH0BA,CAAiBC,KAAjB,CC5BG,AD4BoBC,CC3B1B,KD2BG,GAAgC,SAAhC;AGzBH,AH0BA,GAFD,2BExBU,AEAA,CFET;AHFG,AKCA,AJ0BJY,EAAAA,GAAG,CAACE,II1BImB,IJ0BR,CAAa,GAAb,EI1BkB,GAAG,6BAAiB,IAAjB,CAAjB;ALAA,AKCH,AJ0BD,SAAOrB,ED3BE1C,CC2BT,GD3BI,CAAUC,KAAV,CAAgB,OEFX,GFEL,EAA4B,6BAA5B;AACA,AEFA,AD6BP,UC7BW6C,CFEC9C,GEFG,CFER,CAAUC,CEFC,IFEX,CAAgB,AEFAE,GAAL,CAASsB,GCGf,CCFC,AFDK,CAAc,CAAd,EAAiB,CFE5B,EAA+B,EEFEf,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,GAA7C,EAAkD,EFE7D,YEFW,EAAkE;ACI7E,ACFA,AJCA,AEFIsB,QAAAA,ECGAtB,CCFCZ,AJCAA,CEFG,EAAE,CECV,AJCA,CGCU,ACFAC,AJCAA,GGCG,CAAb,CCFA,AJCA,CIDgB,AJCA,IEH6D,EEE7E,EAAwB,KJCxB,EAA+B,yBAA/B,EAJM,CIGN,AJEA;AGCA,ACFA,AFDIkC,QAAAA,ECGAiB,ACFAW,EFDI,EAAE,CCGD,GAAG,EAAZ,ACFc,AFH+D,GEG5D,MCAZ,uBDA6B,IAAjB,CAAjB;ADGA,ACFH,AJCG,AEFI3B,AGAC,QHADA,ECGAtB,AHDAZ,GEFK,EAAE,ICGE,CHDC,EGCE,CAAhB,AHDiB,KAAKC,GAAL,CAASC,QAAT,CAAkB;AAC/BC,AENyE,OAAlE,CFMPA,CEFDgC,QFEU,AENF,CAIC,CFEG,AENJ,CAAX;ACOA,AHAQ/B,AEFRwC,AGDA,MHCAA,IFEQxC,AEFJ,AGDEmF,CFGD,ADFAnD,CAAL,GCESvB,AHAI,AEFJ,CCEC,CHAK,EGAF,CDFCL,CCEd,EAAiBK,CAAC,ADFT,AGDW,CHCDJ,EGDI,CFGD,AEHE,CFGxB,EAAyBI,CAAC,CDFjB,AGDc,CFGvB,ADF4BF,CGDG,CFGD,GDFrB,CGDc,EHCa,AGDE,CHC7B,GAA+BiC,CGDjB,EAAsB,CHCD,CAACjC,GGDtB,CAAvB,CHCwC,GAAa,CAArD;ACGI,AHFW,AEAf,AGDA,UAAI6E,CHCCvF,CCEGkD,CEHR,CHCA,CAASpD,CCEG,GAAG,CDFf,CAAe,CAAf,ECEoBE,ADFF,CAAlB,ECEe,ADFM,CCEGmD,CCHnB,KDGU,CAAgB,EDF/B,CCEe,CDFkBP,CCEG,KAAKnC,GDFzC,CAA2C,CAA3C,CCEe,CDF+ByB,QAA9C,CAAuD,CAAvD,KCEwDvB,SAAzC,GAAsDuB,QAAtD,CAA+DtB,CAA/D,CAAX;AACAqC,ACHJ,AJDmC,AEEnC,AGDA,OLDiB,CGIbA,AHJJ,EEEIJ,AGDA2C,CDAC1B,EDGI,AEHT,CFGUV,IAAN,ACHJ,CDGeF,CDFD,CEDC,EDGX,ADFa,GEDGlD,EFCEA,CEDP,CAASsB,CFCP,CAASxB,EEDX,CAAc,EAAd,AFCE,CAAe,CEDC,EAAlB,EAAsB,AFCAS,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GAA2B,CAA1C,CEDF,CFC+C,CEDC,IFCIH,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,CAAzE,EAA4E,aAA5E,EAA2FyB,QAA3F,CAAoG,CAApG,CAAjB;ACGIvB,ACHAoB,AJIJ,AEHA,AGDA,QFGIpB,ACHAoB,EFCAe,AGDA2C,CLIC5F,CIJG,CCAR,CDAU,CJIV,CAAUO,CGDG,CHCb,CAAa,CEHC,GAAG,KAAKJ,CFGtB,EIL+D,AJKtC,AEHR,CAASF,KAAT,CAAe,GFGNO,EEHWE,IAAL,CFGP,AEHiBC,EFGJ,MEHN,CAAmBE,KAAnB,GAA2B,CAA1C,EAA6C,KAAKH,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,CAA5B,GAAgC,GAA7E,EAAkF,aAAlF,EAAiGyB,QAAjG,CAA0G,CAA1G,CAAjB;ACGIzB,ACHAuB,AJIAjC,AEHJ,AGDA,QFGIU,ACHAuB,AJIAjC,EEHAgD,AGDA2C,EDAI,EDGE,ACHA,IDGI,AHCA,AKJd,CLIepF,CGDX,ADFU,GAAG,IFGb,CAAoB,AEHFN,CFGlB,EAAuB,AEHV,CAASF,IFGK,CAACS,AEHf,CAAe,GFGL,CAAUC,CEHAD,IAAL,CAAUC,EFGf,CAAmBC,KEHd,CFGL,AEHwBC,GFGI,CAAnD,CEH4B,CFG0B,EEHC,CAA1C,EFG6C,AEHA,CFGCH,IAAL,AEHSA,CFGCC,GEHN,CAAUA,IFGd,CAAmBE,GEHf,CAAmBD,CFGvB,GAA2BJ,EEHvB,GAA4B,CAA5B,CFG1D,EAA0F,AEHA,EFG1F,CEHa,EAAkF,aAAlF,EAAiG6B,QAAjG,CAA0G,CAA1G,CAAjB;ACGC,ACN8D,AJO9D,AEHD,AGDAuB,MAAAA,CDHe,AJKf,CILA,SCGW,CAAC,QHCCZ,IGDK,MHClB,EAAyBzD,SAAIC,MAAJ,CAAWG,IAApC,EAA0C,OAA1C,EAAmD,IAAnD;AECA,AJIA,AEJA,AGDI,WDCCuE,AJIAlE,CKLG0F,GLKR,AKLI,CLKMnF,CKLG,CLKb,CAAa,CIJb,ECDiB,CDCA,ACDCuF,GHCL7C,EEAS9C,CJItB,CKLa,CDCI,AJIQ,AKLCuF,CDCAxB,ECDb,EHCb,EAAyB3E,GEAR,CAAmB,CJIL,CAC9B,CADD,EAhBM,AEYuBC,CEAZ,AJMjB,CINA,IFAyB,CAAWK,IAApC,EAA0C,sBAA1C,EAAkE,IAAlE;ACEA,ACAA,AFDA,AGDI,UFEA2D,CCACU,CCFGyB,GAAJ,EAAS,GDEb,CAAexB,CCFE,CAAC2B,EFEC,CDDN5C,ECCS,EEFT,CFEb,AEF0ByC,GDE1B,ACFa,CDEgB,CFD7B,EAAyBpG,SAAIC,MAAJ,CAAWI,IAApC,EAA0C,MAA1C,EAAkD,IAAlD;ACEA,ACAIwE,AJIJ,AELH,AGDO,QDEAA,EDAAX,AHIA3C,EKNI8E,CDEC,EAAE,ACFP,EAAS,ELMA,GAAG,AKNC,CLMjB,AKNkBE,GFEE,GAAG,CEFV,CAAaF,CFE1B,EEFa;AFGb,ACDaxE,UDCTsC,ACDStC,KAAK,CDCR,CCDU,CAAT,CDCE,CAAb;AACA,ACFuBiD,AJKvB,AKNI,UFGAV,ACFmBU,CJKlB,CKNG0B,CDCkB,EAAE,AJKnBhF,CAAC,GAAG,CAAb,EGHgB,AHGAA,CAAC,EGHE6C,CHGC,AKNE,ELMtB,CKNyB6B,CLMD1E,CAAC,EAAzB,EAA6B,CGHC,CAAC,MEHQ,CAAC,KFGH,AEHO,CAACiF,YAAL,CAAkB,CAAlB,EAAqBP,cAAc,CAAC3B,MAAf,GAAwB,CAA7C,CAAD,CAAnC;AFIAV,ACHO,AJMP,QGHAA,CCJyB,GJOrBrC,CGHC,AHGA,CGHC,CAAD,CAAL,CAASuB,CAAT,AHGU,EAAN,CGHSkB,GHGGzC,CAAC,KAAK,EAAlB,IGHJ,AHG4BA,CAAC,KAAK,EAAlC,EAAsC;AGFtCqC,ACHAkB,AJMI,AKPJ,EHvBmBjD,MC2BnB+B,ACHAkB,AFxByB,CAAChD,GGuBtBgB,CFIC,ACHA,ACDA,CFIC,CAAD,ACHE,AJMEtC,CGHT,AEJQ,CFICuC,CAAT,CHGI,CAAUvB,CGHDyC,AEJD,CAACuC,SLOT,GKPI,CAAkB,EFI1B,CEJQ,EAAuB,GAAvB,CAAR,ELOiClF,SAA7B,sCAAsEC,CAAtE,WAA+E;AGFnFqC,ACJShC,AJODH,QGHRmC,ECJShC,EJODH,CGHH,CAAC,CAAD,ACJS,CDId,CAASoB,ACJO,GAAT,GJOY,EGHnB,AHGqB,CGHHqB,CHEiE,KGFnF;AACAD,ACLqBY,AJQbnD,AKRR,QFKAuC,ECLqBY,EJQbnD,AKRJqB,CDAoB,ACAnB,EDAqB,CCAlB,KAAI,CLQM,AKRLyD,EFKG,AHGI,IGHA,EAApB,IELQ,CAAkB,GAAlB,EAAuB,GAAvB,CAAR;AFMAtC,ACNO,AJM4E,QGAnFA,CCRyB,EJQrB,GGAE;AACNN,ACNAmB,AJSIzD,AKTJ,QFMAsC,ACNAmB,EJSIzD,EKTA+E,CFMC,ACNA,CDMChC,CCNC,EAHkB,EDSzB,AHGa,CKTD,GAAG,KAAI,CAACmC,YAAL,CAAkB,EAAlB,EAAsB,EAAtB,CAAf;ADCAxB,AJSC,QITDA,aAAa,EAAE,CAAC,GAJS;ADUzB,ACLAC,AJSH,AKVG,OLlBE,CImBFA,AJUJ,IGLQ,CAACrB,ACLA,EAAE,CCDA2C,EFMG,CAACjC,MAAX,EAAmB,GENnB;AFOInB,ACNK+B,ACAL,UFMA/B,ACNK+B,GAAG,EAAE,ACALe,CDAM,EAAR,KDMU,CAAC9B,KENK,CAAC,CAAD,CAAnB,IFMa,CAAb;AACH,ACPkBgB,ACCXe,UDDWf,ECCXe,CDDc,EAAE,ACCb,CDDc,ECCX,KAAI,CAACO,YAAL,CAAkB3D,CAAlB,EAAqBC,CAArB,CAAN;AFOX,ACRU,AJWX,AKTYoD,OFJkB,EAU3B,ACb0B,EJgBxB3F,CKTO2F,CFJkB,CAA9B,CHaA,AKTe,CLSL1F,EKTQ,GLSlB,CAAgB,CKTM,CAACiG,KLSvB,EAAyB,IKTP,CAAiBR,GAAG,CAACpD,CAAJ,GAAQoD,GAAG,CAAC7E,KAAZ,GAAoB,EAArC,EAAyC0B,CAAzC,ELSlB,AKT8DsD,QAA5C,CAAN;AFOZ,ACRIjB,AJWJ,AKTYgB,QDFRhB,EDQAb,CHGC/D,CKTO4F,EDFF,CJWV,AKTe,CDFH,AJWF3F,EKTQ,EFMJ,CHGd,CAAgB,CGHC,AENK,CAACgG,KLSvB,EAAyB,KKTP,CAAkBN,GAAG,CAACrD,CAAJ,GAAQqD,GAAG,CAAC9E,GFMd,EENE,EFMnB,CENuC,CFMhB8C,CHGxC,AKToC,GAAyBkC,QFM5C,AENC,CFMlB,CENuEtD,CAArD,CAAN;AFOf,ACTiBmC,AJYd,AKTY,UDHEA,CJYT1E,EIZY,EAAE,AJYnB,CIZoB,AJYVC,GIZE,EJYZ,CAAgB,OAAhB,EAAyB,4BAAzB;AIZyB0E,AJazB,UIbyBA,CJapB3E,EIbuB,EAAE,AJa9B,CAAUC,KAAV,CAAgB,OAAhB,EAAyB,4BAAzB;AIbY,AJcZ,AKVQ,SDVqB,EJoBxBD,IAAL,AKVayF,CLUHxF,KAAV,CAAgB,OAAhB,AKV2B,CAAC,CLUH,AKVE,CAAnB,gCLUR;AIbI4E,AJcJ,AKVYa,QDJRb,GJcC7E,CKVO0F,GLUZ,AKVe,CDJH,AJcF1E,EIdI,ACII,KAAI,CAACiF,GLUvB,CAAsB,MAAtB,EAA8B,AKVZ,CAAkB3D,CAAlB,EAAqBC,CAArB,CAAN,2BLUZ,EAAiE;AIdjDmC,AJeZzD,AKVQ0E,EFlCWtE,MAAM,AH4CzBJ,CG5C0BK,CC6BdoD,ECKJiB,CDLO,EAAE,ACKN,GAAG,CDLJ,AJeC,EAAE,EKVK,CLS2C,AKT1CM,YAAL,CAAkBP,GAAG,CAACpD,CAAJ,GAAQ,GAA1B,EAA+BC,CAA/B,CAAN;ADLeoC,AJgBvBzD,AKVQ0E,QLUR1E,EIhBuByD,ECMfiB,CDNkB,EAAE,ACMjB,GLUD,AKVI,ELUF,GKVM,CAACK,YAAL,CAAkBN,GAAG,CAACrD,CAAJ,GAAQ,GAA1B,EAA+BC,CAA/B,CAAN;ADNE,AJcmD,AKPrD,OLOZ,EIrB6B,AJdvB,CAuCN;AIjBIuC,QAAAA,SAAS,EAAE,KARc;AASzBC,AJiBJ,AKXQ,QDNJA,GJiBC/E,IAAL,AKXayF,CLWHzE,CIjBG,EAAE,GATc,KJ0B7B,CAAsB,CKXK,CAAC,CAAD,CAAnB,ELWR,EAA8B,wBAA9B,EAAwD;AIhBpDgE,AJiBA/D,AKXQyE,QDNRV,AJiBA/D,IKXQyE,GAAG,GAAG,CLWH,CIjBC,CJiBC,CIjBC,CCMI,CDhBO,AJ0B2B,AKVjCO,YAAL,CAAkB3D,CAAlB,EAAqBC,CAArB,CAAN;ADLRD,AJiBApB,AKXQyE,QDNRrD,AJiBApB,CIjBC,EAAE,CCMKyE,EDjBiB,CCiBd,GLWD,AKXI,ELWF,GKXM,CAACM,YAAL,CAAkBP,GAAG,CAACpD,CAAJ,GAAQ,GAA1B,EAA+BC,CAA/B,CAAN;ADLRA,AJcoD,AKR5CqD,OLQZ,CIdIrD,CAAC,EAAE,CCMKqD,GAAG,GAAG,KAAI,CAACM,WAAL,CAAiBP,GAAG,CAACrD,CAAJ,GAAQqD,GAAG,CAAC9E,KAAZ,GAAoB,EAArC,EAAyC0B,CAAzC,EAA4CsD,QAA5C,CAAN;ADlBiB,AJ8BhC,AKXe,ODnBZ;AAcH;ACMW,eAAKJ,cAAc,CAAC,CAAD,CAAnB;AACIC,YAAAA,GAAG,GAAG,KAAI,CAACQ,KLUlB,MKVa,CAAiB5D,CAAjB,EAAoBC,CAApB,EAAuBsD,QAAvB,CAAN;ALWZ,AKVYF,WLUPxE,CKVOwE,GAAG,CLUf,CAAWvE,CKVO,ILUlB,CAAiB7B,AKVK,CAAC0G,GDPpBhB,KJiBkBzF,CIjBZ0F,GCOS,CAAkBQ,CLUnB,CAAWhG,CIjBZ,ACOuB,CAAC4C,CAAJ,CLUpC,EKV4CoD,GAAG,CAAC7E,KAAZ,GAAoB,EAAtC,EAA0C0B,CAA1C,CAAN;ADNZ,AJiBH,AKVeqD,WDPP3B,CCOO2B,GAAG,GDPf,ACOkB,CDPLT,ICOS,CAACe,EDPvB,CAAqB,QCOH,CAAiBP,CDPJ,CAAC,CCOM,CAACrD,CAAJ,GAAQqD,CDPNT,ECOS,CAACrE,EDPhB,EAAauE,CCOT,GAAoB,EAArC,CDPa,CAAqB,ACOO7C,CDP5B,ACOb,CDPG,CCOyCsD,EDPL,IAApC,ECOH,CDP8C,ACOpD,KDPyD3B,SAAL,CAAemB,QAAf,CAAwBC,KAAxB,CAA8BC,KAA9B,CAAoCzB,MAA/E,GAAwF,YAA7G;AACH,ACOe;AApBR;AAsBH,OA9BU,EA8BR,IA9BQ,CAAX;AAgCH,ELnD0BzC,MAAM,CAACC;EICPD,MAAM,CAACC;;iCCmDrBoD,KAAKC,KAAK;AACnBD,MAAAA,GAAG,GAAGyB,IAAI,CAACC,IAAL,CAAU1B,GAAV,CAAN;AACAC,MAAAA,GAAG,GAAGwB,IAAI,CAACE,KAAL,CAAW1B,GAAX,CAAN;AACA,aAAOwB,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiB3B,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACH;;;4BACO6B,IAAI;AACR,UAAIA,EAAE,CAACC,IAAH,KAAY,QAAhB,EAA0B;AACtBD,QAAAA,EAAE,CAACT,OAAH;AACH;;AACD,UAAIS,EAAE,CAACC,IAAH,KAAY,MAAhB,EAAwB;AACpBD,QAAAA,EAAE,CAACE,UAAH,CAAc,KAAd;AACH;AACJ;;;iCACYnE,GAAGC,GAAG;AACf,aAAO,KAAKpC,GAAL,CAASmD,MAAT,CAAgBhB,CAAhB,EAAmBC,CAAnB,UAA8BK,QAA9B,CAAuC,GAAvC,CAAP;AACH;;;gCACWN,GAAGC,GAAGsD,UAAU;AACxB,aAAO,KAAK1F,GAAL,CAASsB,IAAT,CAAca,CAAd,EAAiBC,CAAjB,EAAoB,aAApB,EAAmC;AACtCL,QAAAA,IAAI,YAAK2D,QAAL,aADkC;AAEtC1D,QAAAA,IAAI,EAAE,MAFgC;AAGtCC,QAAAA,KAAK,EAAE;AAH+B,OAAnC,CAAP;AAKH;;;;EAzE0Bf,MAAM,CAACC","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["export const CST = {\n    SCENES: {\n        LOAD: 'LOAD',\n        MENU: 'MENU',\n        CARD: 'CARD',\n        FIRE: 'FIRE',\n        TOOL: 'TOOL'\n    }\n}","import { CST } from '../CST';\n\nexport class LoadScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.LOAD\n        })\n    }\n    init() {\n\n    }\n    preload() {\n        // MAIN MENU\n        this.load.image('title_bg', './assets/image/title_bg.jpg');\n        this.load.image('menu_button', './assets/image/menu_button.png');\n        this.load.image('back_button', './assets/image/back.png');\n        // LOADING BAR\n        let loadingBar = this.add.graphics({\n            fillStyle: {\n                color: 0xffffff\n            }\n        });\n\n        this.load.on('progress', (percent) => {\n            loadingBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percent, 50);\n        });\n\n        this.load.on('complete', () => {\n        });\n        // CARDS\n        let cardIndex = 0;\n        for (let i = 0; i < 55; i++) {\n            if (i !== 13 && i !== 27 && i !== 41) {\n                this.load.spritesheet(`card${cardIndex}`, `assets/sprite/cards/tile0${i}.png`, {\n                    frameHeight: 96,\n                    frameWidth: 72\n                });\n                cardIndex++;\n            }\n        }\n        // FIRE\n        this.load.image('space', 'assets/particles/starfield.jpg');\n        this.load.image('fire1', 'assets/particles/fire1.png');\n        this.load.image('fire2', 'assets/particles/fire2.png');\n        this.load.image('fire3', 'assets/particles/fire3.png');\n        this.load.image('smoke', 'assets/particles/smoke-puff.png');\n        this.load.spritesheet('ball', 'assets/particles/plasmaball.png', {\n            frameHeight: 128,\n            frameWidth: 128\n        });\n        // TOOL\n        this.load.spritesheet('euro', 'assets/sprite/euro.png', {\n            frameHeight: 128,\n            frameWidth: 128\n        });\n    }\n    create() {\n        this.scene.start(CST.SCENES.MENU);\n    }\n}","/** @type {import(\"../typings/phaser\")} */\nimport { CST } from '../CST';\n\nexport default function createButton(button, scene, text, that) {\n    button.setInteractive();\n    button.on('pointerup', () => {\n        that.scene.start(scene);\n    });\n    button.on('pointerover', () => {\n        that.game.canvas.style.cursor = \"pointer\";\n        console.log(scene);\n    });\n    button.on('pointerout', () => {\n        that.game.canvas.style.cursor = \"initial\";\n    });\n    let txt = that.add.text(0, 0, text, {\n        font: '20px Arial',\n        fill: '#fff',\n        align: 'center'\n    }).setDepth(2);\n    txt.x = button.x - txt.width / 2;\n    txt.y = button.y - txt.height / 2 - 7;\n}\n\nexport function createBackButton(that, interval) {\n    let btn = that.add.image(that.game.renderer.width - 64, that.game.renderer.height - 64, 'back_button').setDepth(0);\n    btn.setInteractive();\n    btn.on('pointerup', () => {\n        if (interval) {\n            clearInterval(interval);\n        }\n        that.scene.start(CST.SCENES.MENU);\n    });\n    btn.on('pointerover', () => {\n        that.game.canvas.style.cursor = \"pointer\";\n    });\n    btn.on('pointerout', () => {\n        that.game.canvas.style.cursor = \"initial\";\n    });\n    btn.setScale(0.3);\n    return btn;\n}","import { CST } from '../CST';\nimport createButton from './utils';\n\nexport class MenuScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.MENU\n        })\n    }\n    init() {\n    }\n    create() {\n        let logo = this.add.text(0, this.game.renderer.height * 0.2, 'Gamanza Test', {\n            font: '48px Arial',\n            fill: '#fff',\n            align: 'center'\n        }).setDepth(1);\n        logo.x = this.game.renderer.width / 2 - logo.width / 2;\n        this.add.image(0, 0, 'title_bg').setOrigin(0).setDepth(0);\n        let cardButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2, 'menu_button').setDepth(1);\n        let toolButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2 + 100, 'menu_button').setDepth(1);\n        let fireButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2 + 200, 'menu_button').setDepth(1);\n        createButton(cardButton, CST.SCENES.CARD, 'Cards', this);\n        createButton(toolButton, CST.SCENES.TOOL, 'Image/Text Generator', this);\n        createButton(fireButton, CST.SCENES.FIRE, 'Fire', this);\n    }\n}","import { CST } from '../CST';\nimport { createBackButton } from './utils';\n\nexport class CardScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.CARD\n        })\n    }\n    init() {\n        \n    }\n    preload() {\n\n    }\n    create() {\n        let height = 0;\n        let cards = [];\n        let cardIndex = 0;\n        for (let i = 51; i >= 0; i--) {\n            let card = this.add.sprite(100, 50 + height, `card${cardIndex}`).setDepth(i);\n            cards.push(card);\n            cardIndex++;\n            height += 10;\n        }\n        let secondDeckWidth = 500;\n        let secondDeckHeight = 680;\n        let sDepth = 0;\n        let cardInterval = setInterval(() => {\n            cards[0].x = secondDeckWidth;\n            cards[0].y = secondDeckHeight;\n            cards[0].setDepth(sDepth);\n            secondDeckHeight -= 10;\n            sDepth++;\n            cards.shift();\n            if (!cards.length) {\n                clearInterval(cardInterval);\n            }\n        }, 1000);\n        let backButton = createBackButton(this, cardInterval);\n    }\n}","import { CST } from '../CST';\nimport { createBackButton } from './utils';\n\nexport class FireScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.FIRE\n        })\n    }\n    init() {\n        let fpsText;\n        let particles;\n    }\n    preload() {\n        this.load.image('fire', 'assets/particles/muzzleflash3.png');\n        let backButton = createBackButton(this);\n    }\n    create() {\n        this.fpsText = this.add.text(10, 10, 'FPS: -- \\n-- Particles', {\n            font: 'bold 26px Arial',\n            fill: '#ffffff'\n        });\n    \n        this.particles = this.add.particles('fire');\n    \n        this.particles.createEmitter({\n            alpha: { start: 1, end: 0 },\n            scale: { start: 0.5, end: 2.5 },\n            speed: 20,\n            accelerationY: -300,\n            angle: { min: -85, max: -95 },\n            rotate: { min: -180, max: 180 },\n            lifespan: { min: 1000, max: 1100 },\n            blendMode: 'ADD',\n            frequency: 110,\n            maxParticles: 10,\n            x: 400,\n            y: 300\n        });\n    }\n    update(time, delta) {\n        this.fpsText.setText('FPS: ' + (1000/delta).toFixed(3) + '\\n' + this.particles.emitters.first.alive.length + ' Particles');\n    }\n}","import { CST } from '../CST';\nimport { createBackButton } from './utils';\n\nexport class ToolScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.TOOL\n        })\n    }\n    init() {\n\n    }\n    preload() {\n        let backButton = createBackButton(this);\n    }\n    create() {\n        const configurations = ['STS', 'SSS', 'SST', 'TST'];\n        let el1;\n        let el2;\n        let el3;\n        let fontSize;\n        setInterval(() => {\n            if (el1) this.destroy(el1);\n            if (el2) this.destroy(el2);\n            if (el3) this.destroy(el3);\n            let selectedConfig = configurations[this.getRandomInt(0, configurations.length - 1)];\n            let x = this.getRandomInt(100, 650);\n            let y = this.getRandomInt(100, 650);\n            let fontSize = this.getRandomInt(14, 42);\n            switch(selectedConfig) {\n                case configurations[0]:\n                    el1 = this.displayImage(x, y);\n                    el2 = this.displayText(el1.x + el1.width - 78, y, fontSize);\n                    el3 = this.displayImage(el2.x + el2.width + 20 + fontSize, y);\n                    break;\n                case configurations[1]:\n                    el1 = this.displayImage(x, y);\n                    el2 = this.displayImage(el1.x + 100, y);\n                    el3 = this.displayImage(el2.x + 100, y);\n                    break;\n                case configurations[2]:\n                    el1 = this.displayImage(x, y);\n                    el2 = this.displayImage(el1.x + 100, y);\n                    el3 = this.displayText(el2.x + el2.width - 78, y, fontSize);\n                    break;\n                case configurations[3]:\n                    el1 = this.displayText(x, y, fontSize);\n                    el2 = this.displayImage(el1.x + el1.width + 50, y);\n                    el3 = this.displayText(el2.x + el2.width - 78, y, fontSize);\n                    break;\n            }\n        }, 2000);\n        \n    }\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n    destroy(el) {\n        if (el.type === 'Sprite') {\n            el.destroy();\n        }\n        if (el.type === 'Text') {\n            el.setVisible(false);\n        }\n    }\n    displayImage(x, y) {\n        return this.add.sprite(x, y, `euro`).setScale(0.5);\n    }\n    displayText(x, y, fontSize) {\n        return this.add.text(x, y, 'Sample text', {\n            font: `${fontSize}px Arial`,\n            fill: '#fff',\n            align: 'center'\n        });\n    }\n}","/** @type {import(\"../typings/phaser\")} */\nimport { LoadScene } from './scenes/LoadScene';\nimport { MenuScene } from './scenes/MenuScene';\nimport { CardScene } from './scenes/CardScene';\nimport { FireScene } from './scenes/FireScene';\nimport { ToolScene } from './scenes/ToolScene';\n\nexport let game = new Phaser.Game({\n    type: Phaser.WEBGL,\n    width: 1024,\n    height: 768,\n    scene: [\n        LoadScene,\n        MenuScene,\n        CardScene,\n        FireScene,\n        ToolScene\n    ],\n    physics: {\n        default: 'arcade',\n        arcade: {\n            useTree: false,\n            gravity: { y: 100 }\n        }\n    },\n    render: {\n        pixelArt: true\n    }\n});"]}