{"version":3,"sources":["src/CST.js","src/scenes/LoadScene.js","src/scenes/utils.js","src/scenes/MenuScene.js","src/scenes/CardScene.js","src/scenes/FireScene.js","src/scenes/ToolScene.js","src/main.js"],"names":["CST","SCENES","LOAD","MENU","CARD","FIRE","TOOL","LoadScene","key","load","image","loadingBar","add","graphics","fillStyle","color","on","percent","fillRect","game","renderer","height","width","cardIndex","i","spritesheet","frameHeight","frameWidth","scene","start","Phaser","Scene","createButton","button","text","that","setInteractive","canvas","style","cursor","txt","font","fill","align","setDepth","x","y","createBackButton","interval","btn","clearInterval","setScale","MenuScene","setOrigin","logo","cardButton","toolButton","fireButton","CardScene","cards","card","sprite","push","secondDeckWidth","secondDeckHeight","sDepth","cardInterval","setInterval","shift","length","backButton","FireScene","fpsText","particles","createEmitter","alpha","end","scale","speed","accelerationY","angle","min","max","rotate","lifespan","blendMode","frequency","maxParticles","time","delta","setText","toFixed","emitters","first","alive","ToolScene","el1","destroy","el2","el3","configurations","fontSize","generatorInterval","selectedConfig","getRandomInt","displayImage","displayText","Math","ceil","floor","random","el","type","setVisible","Game","WEBGL","physics","default","arcade","useTree","gravity","render","pixelArt"],"mappings":";;;;;;AAAO,IAAMA,GAAG,GAAG;AACfC,AOAJ,AHDA,ACAA,AJAA,AEAA,AGAA,ENCIA,MAAM,EAAE;AACJC,AEDR,IFCQA,IAAI,EAAE,MADF;AAEJC,AODR,AHDA,ACAA,AFAA,AGAA,INEQA,IAAI,EAAE,MAFF;AAGJC,AEJR,IFIQA,IAAI,EAAE,MAHF;AAIJC,AOFR,ALAe,IFEPA,IAAI,CEFY2B,CFEV,MAJF,KEEG,CAAsBC,MAAtB,EAA8BL,KAA9B,EAAqCM,IAArC,EAA2CC,IAA3C,EAAiD;AFGxD7B,AEFJ2B,EAAAA,EFEI3B,IAAI,AEFF,CAAC8B,CFEG,aEFV;AFHQ,AOGZ,ALCIH,EAAAA,MAAM,CAACjB,EAAP,CAAU,WAAV,EAAuB,YAAM;AFLd,AEMXmB,CFND,GEMCA,IAAI,CAACP,KAAL,CAAWC,KAAX,CAAiBD,KAAjB;AKDR,ALEK,GAFD;AAGAK,EAAAA,MAAM,CAACjB,EAAP,CAAU,aAAV,EAAyB,YAAM;AKRnC,ALSQmB,IAAAA,IAAI,CAAChB,IAAL,CAAUkB,MAAV,CAAiBC,KAAjB,CAAuBC,MAAvB,GAAgC,SAAhC;AKFD,ALGF,GAFD,CKDOpB,IAAI,GAAG,IAAIW,MAAM,CAACoF,IAAX,CAAgB;AAC9BF,ALGA/E,EKHA+E,ALGA/E,IKHI,EAAEH,ALGA,CAACd,EAAP,CAAU,EKHE,CAACmG,KADiB,ILI9B,EAAwB,YAAM;AKF9B7F,ALGIa,EKHJb,ELGIa,GKHC,CLGG,CKHD,ALGEhB,IKLqB,ALK1B,CAAUkB,MAAV,CAAiBC,KAAjB,CAAuBC,MAAvB,GAAgC,SAAhC;AKFJlB,ALGC,EKHDA,CLCA,KKDM,EAAE,GAHsB;AAI9BO,ALGA,EKHAA,ILGIY,CKHC,EAAE,ALGA,CKFHjC,ELEM4B,IAAI,CAACvB,GAAL,CAASsB,IAAT,CAAc,CAAd,EAAiB,CKHpB,ALGG,EKDNkB,ALC0BlB,IAApB,EAA0B,cKH7B,EAGHwB,oBAHG,EAIHa,oBAJG,EAKHwB,oBALG,CAJuB;AAW9BqB,ALHI3E,EKGJ2E,ELHI3E,IAAI,CKGD,CLHG,CKGD,WLJ2B;AKKhC4E,ALHA3E,IKGA2E,ALHA3E,IAAI,EAAE,CKGC,EAAE,GLLuB,KKI3B;AAEL4E,ALHA3E,IKGA2E,ALHA3E,KAAK,CKGC,CLHC,CKGC;AACJ4E,ALP4B,GAA1B,EAIP3E,CKGK2E,OAAO,ALPL,CAIE,CKGK,ALPP,CAAV,IKMY;AAEJC,ALHRhF,EAAAA,EDjBSjC,CCiBN,CKGKiH,ALHJ3E,CAAJ,GAAQZ,GKGO,EAAE,CLHH,CAACY,CAAP,GAAWL,GAAG,CAAClB,KAAJ,GAAY,CAA/B;AKGmBwB,ALFnBN,EAAAA,GAAG,CAACM,CAAJ,CKEmBA,CAAC,CLFZb,CKEc,KLFR,CAACa,CAAP,GAAWN,GAAG,CAACnB,MAAJ,GAAa,CAAhC;AKEiB,ALDpB,IElBYqC,ACAAa,ACAAwB;ACiBG;AAFH,ALKN,GKhB2B,CJJrB3C,KDoBGL,gBAAT,CAA0BZ,IAA1B,EAAgCa,QAAhC,EAA0C;AKE7CyE,ANtBA,ACqBA,EKCAA,ILDIxE,EKCE,CLDC,CKCC,ELDEd,IAAI,CAACvB,GAAL,CAASF,EDrBL,GCqBJ,CAAeyB,IAAI,CAAChB,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GAA2B,EAA1C,EAA8Ca,IAAI,CAAChB,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,EAA1E,EAA8E,aAA9E,EAA6FuB,QAA7F,CAAsG,CAAtG,CAAV;AKEI8E,ANvBU,ACsBdzE,EAAAA,EKCIyE,CLDD,CAACtF,MKCQ,EAAE,MLDd;AKAQ,AHrBR,ACAA,ACAA,AJsBAa,EAAAA,GAAG,CAACjC,EAAJ,CAAO,WAAP,EAAoB,CEtBN,ACAA,ACAA,WJsBY;AKnBI,AHHhB,ACAA,AJDA,AKCA,AJuBV,CKpBU,CAAX,MLoBKgC,QAAJ,EAAc,gEDvBR;AACFxC,AEDR,ADwBQ0C,MDvBA1C,ACuBA0C,GDvBG,EAAElD,QCuBQ,CDvBJC,ACuBK+C,GCxBR,GFCD,CAAW9C,CCuBH,CAAb;AExBM,ACAA,AJAJ,AEAI,AGAA,AJyBT,KD1BS,6EGEJ,ACAA,ACAA;AFCFM,ACAAA,AJCP,AKDOA,MFAAA,ACAAA,ACAAA,GFAG,ACAA,ACAA,EFAER,ACAAA,ACAAA,SFAIC,ACAAA,ACAAA,MFAJ,ACAA,ACAA,CFAWG,ACAAC,ACAAC;AFDd,ACAA,AFDI,AGCJ,AJyBN6B,IAAAA,CE1BU,ACAA,ACAA,GJ0BN,CAACP,KAAL,CAAWC,KAAX,CAAiB7B,SAAIC,MAAJ,CAAWE,IAA5B,yCCzBM;ACGT,ACAA,AFFOK,AGEP,AJuBA,GALD,GCpBQA,GAAG,EAAER,SAAIC,MAAJ,CAAWE;AADd,AD2BV8C,EAAAA,GC5Bc,AD4BX,CAACjC,EAAJ,CAAO,aAAP,EAAsB,YAAM;ACxB3B,ADyBGmB,IAAAA,IAAI,CAAChB,IAAL,CAAUkB,MAAV,CAAiBC,KAAjB,CDzBG,ACyBoBC,CDvB1B,KCuBG,GAAgC,SAAhC;AACH,GAFD;AAGAU,EAAAA,GAAG,CAACjC,EAAJ,CAAO,YAAP,EAAqB,IG1Bd,GDAG,AEAA,KJ0BiB;AEzBvB,ACAA,ACAA,AJ0BAmB,IAAAA,IAAI,CAAChB,CG1BDqD,CDAC5D,AEAAA,EJ0BL,CE1BA,AEAA,AJ0BUyB,CE1BD3B,AEAAA,EDAT,GDAA,AEAA,AJ0BA,CE1Be,AEAA,AJ0BE4B,CE1BjB,AEAA,EFAkB,AEAA,CFAlB,AEAA,CJ0BA,CE1BqB,AEAA,AJ0BEC,GDzBjB,GCyBN,GAAgC,CE1BhC,AEAA,EFAiCc,AEAAA,MJ0BjC,GE1BA,AEAA,CFA2C,AEAA,CFA3C,AEAA,EFA8CT,AEAAA,QFA9C,AEAA,CFAuD,AEAA,CFAvD,AEAA;AFCH,ACAG,AJAM,AKAT,AJ0BA,GAFD,OGxBQ6B,SAAJ,UFFK;AEGR,AFFG,AD4BJxB,EAAAA,GAAG,CAACE,KC5BKvC,GAAL,AD4BJ,CC5BaF,AD4BA,GAAb,EC5BI,CAAe,CAAf,EAAkB,CAAlB,EAAqB,UAArB,EAAiC2C,SAAjC,CAA2C,CAA3C,EAA8CT,QAA9C,CAAuD,CAAvD;AFEA,AEDA,AD4BJ,SAAOK,CC5BCK,ED4BR,EC5BY,GAAG,KAAK1C,GAAL,CAASsB,IAAT,CAAc,CAAd,EAAiB,KAAKf,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,GAA7C,EAAkD,cAAlD,EAAkE;AFE7E,AEDIoB,AD4BX,QC5BWA,GFCChC,CEDG,EAAE,CFCV,CAAUC,KAAV,CAAgB,IEF6D,GCCxE,AEAA,GLCL,EAA4B,6BAA5B;AGAA,AHCA,AEDIgC,AGDC,QHCDA,ECAArB,CHCCZ,CEDG,EAAE,CFCV,CGDU,AHCAC,GGDG,CAAb,ADF6E,CFG7E,CAAgB,QIDV,KJCN,EAA+B,gCAA/B;AGAA,ACAA,AJCA,AEDIiC,QAAAA,ECAAgB,CCAC/C,AJCAH,EEDI,CEAT,CDAS,ACAAC,AJCT,AEDW,CFCDA,EGDE,EAAZ,ACAA,CAAe,AJCf,CIDA,AJCgB,EIDE,CAAlB,EAAqB,QJCrB,EIDA,AJC+B,EIDE2C,SAAjC,CAA2C,CAA3C,EAA8CT,QAA9C,CAAuD,CAAvD,AJCA,EAJM,CAKN;AGDA,ACAA,AFJ6E,AGE7E,OHFW,EAIRA,CCACrB,AEFAyE,CDECvF,ECFL,EDEA,ACFS,CDECC,CFJC,CAIC,CCAC,ADJF,CAAX,AGEcuF,CDEd,CDAgB,ACAA,CDAhB,IEFS,CDET,ACFsBD,EDEE,CCFf,kCDET;AACA,AJCA,AEDA1C,AGFA,MHEAA,IEAIgB,AJCA3D,AEDA,AGFAuF,CHECrD,CAAL,CGFA,EHES,AGFA,KDEK,AJCA,AEDA1B,AGFA8E,GDEG,AJCA,CEDR,CAAU7E,EGFV,CLGaR,AKHAsF,GLGL,AKHR,CLGiBrF,CEDjB,CAAmBS,KAAnB,CFCQ,CAAkB,CEDC,CAA3B,GAA+BgC,IAAI,CAAChC,CEAX,IAAjB,AFAuB,CEAxC,EFAqD,CAArD;ACAA,ACCH,AJCOR,AEDJ,AGFA,QLGIA,EEDAyC,AGFA4C,CFCC,EEDL,EFCS3E,AEDA,CFCC,CHEG,EGFA,AHEE,CEDD,AGFAyE,CFCd,EAAiBzE,ADCA,CCDC,GEDT,CFCa,ADCAZ,AGFAuF,CFCtB,EAAyB3E,ADCR,AGFR,CFCiB,ADCAd,ECD1B,EAA8B,CDCb,CAAe,KAAKS,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GAA2B,CAA1C,EAA6C,KAAKH,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,CAAzE,EAA4E,aAA5E,EAA2FuB,QAA3F,CAAoG,CAApG,CAAjB;ACAI,AHEI7B,AEDR,AGFA,ULGQA,AEDJyC,AGFE4C,EFCExC,GHEK,CGFD,CHEG,EGFA,CDCD,GAAG,CCDGhD,AEDA,GFCL,AEDQ,CFCCiD,ADCFjD,AGFE,GHEP,CAASF,CGFH,CFCR,CAAgB,AEDA,EHEd,CCDF,ADCiB,ECDI,AEDb,EAAe,CHEDS,GCDKE,CDCV,AGFT,CHEmBD,CGFG,GFC9B,EEDQ,CAAvB,CHEgC,CAAmBE,KAAnB,GAA2B,CAA1C,ECDwCC,ADCK,KAAKJ,ICDpD,ADC+C,CAAUC,ECDFwB,MDCR,CAAmBvB,CCDlE,CAAgEG,CAAhE,CAAX,EDC0D,GAA4B,CAA5B,GAAgC,GAA7E,EAAkF,aAAlF,EAAiGoB,QAAjG,CAA0G,CAA1G,CAAjB;ACAIe,AHAW,AECf,AGFA,QFCIA,EDCAF,AGFAuC,GFCK,AEDT,CFCUlC,IAAN,CAAWF,CDCD,GCDV,ADCa,KAAKhD,GAAL,CAASF,KAAT,CAAe,KAAKS,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GAA2B,CAA1C,EAA6C,KAAKH,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,CAA5B,GAAgC,GAA7E,EAAkF,aAAlF,EAAiGuB,QAAjG,CAA0G,CAA1G,CAAjB;ACAIrB,AHF+B,AEGnC,AGFA,OLDiB,CGEbA,AHFJ,EKCI2E,GAAJ,IFCa,SDCA3C,GEFR,OFEL,EAAyBvD,SAAIC,MAAJ,CAAWG,IAApC,EAA0C,OAA1C,EAAmD,IAAnD;ACAIiB,ACDJ,AJIA,AEFA,AGFA,QFCIA,EEDA8E,CDAC3B,AJIA/D,EKJL,CFCU,CHGV,CAAUO,EGHI,ACDd,AJIA,CAAa,CGHT,CCDW,KAAKJ,AFEP4C,GEFE,AJIf,CIJwBtB,CJIC,GIJV,CAAc,CFE7B,CEFe,CFEUlC,CEFQ,EAAlB,AJIWiB,EIJW,IFERhB,CFEJ,EAAa,GEFb,CAAWK,IAApC,EAA0C,OEF3B,EAAgD,aFE/D,EAAkE,IAAlE;ACAC,ACDGmC,AJIA9B,AEFJ,AGFA,QDAI8B,AJIA9B,EKJA0F,EDAI,EAAE,IJII,AKJd,CLIenF,OEFFuC,CFET,CAAoB,CAApB,EIL2D,AJKpC,KAAI,AEF/B,CFEgCtC,CEFPnB,GFEE,CAAUoB,KEFRnB,GFEF,CAAmBoB,EEFrB,CAAWhB,GFET,CEF3B,EFEuD,AEFb,CFEtC,EAAsD,GEF1D,EFE8D,AEFZ,CFEac,GEF/D,CFE0D,CAAUC,QAAV,CAAmBE,KAAnB,GAA2BL,OAAjF,EAA0F,EAA1F;AIHAyB,AJIH,AEFJ,AGFG,OLEA,CIFIA,ECAA4D,EDAI,EAAE,aCAW,GAAGnC,WAAW,CAAC,YAAM;AFC1C,ACH+D,AJQ/D,AKLI,ODHW,CAAf,EDGIJ,CHKCtD,CKLGuF,GLKR,AKLI,CLKMhF,CKLG,CLKb,CAAa,GKLI,CAACiF,EFAC,GAAG,CHKtB,CKLa,CFAb,AHKyB,AKLCD,GAAb,SLKkB,CAC9B,CADD,EAhBM,CAkBN;AGNA,ACCA,ACDI,UFAAhC,CCCCS,CCDGyB,GAAJ,EAAS,GDCb,ECDiB,CDCA,ACDCD,GFAE,ECCErF,CDDC,CEAV,CDCI,ACDSsF,CFA1B,ACC0BzB,ECDb,ODCI,CAAmB,MAAnB,CAAjB;ADAA,ACEA,AJIA,AKNI,UFAAR,AHMA1C,CIJCkD,CCFG0B,GAAJ,CFAM,CEAG,EFAA,AHMA,CGNb,ACEA,CAAezB,CJIC,AKNC,CLMjB,AKNkBuB,OAAL,CAAaE,GDE1B,ACFa,CDEgB;ADD7B,ACEIxB,EFxBmB7C,MEwBnB6C,AFxByB,CAAC5C,CCsB1BmC,GCEK,EAAE,ODFK,GAAGC,WAAW,CAAC,YAAM;AACjCR,ACCS9B,AJIb,AKNI,QFCA8B,ECCS9B,CJIR,CKNG0E,CFCC,CAAC,CAAD,ACCS,AJIT/E,CGLL,AHKM,CGLGqB,ACCO,CDDhB,ACCO,CJIE,CAAb,CGLiBkB,CHKDvC,CAAC,GAAG,AKNE,ELMtB,CKNyB4E,CLMD5E,CAAC,EAAzB,EAA6B,CGLzB,OEDmC,CAAC,KAAI,CAACgF,YAAL,CAAkB,CAAlB,EAAqBJ,cAAc,CAAC/B,MAAf,GAAwB,CAA7C,CAAD,CAAnC;AFEAV,ACAmBiB,AJKnB,QGLAjB,ECAmBiB,EJKfpD,CGLC,ACAiB,AJKjB,CGLC,CAAD,ACAmB,CDAxB,CAASsB,CAAT,AHKU,EAAN,CGLSkB,GHKGxC,CAAC,KAAK,EAAlB,IAAwBA,CGL5B,AHK6B,KAAK,EAAlC,EAAsC;AGJtCmC,ACDO,AJMH,AKPJ,QFEAA,CCFyB,GCArBd,CFEC,AEFA,CFEC,CAAD,AHKIpC,CGLT,AEFQ,CFECmC,EHKL,CAAUnB,CKPF,CAAC+E,GFEb,CAAkBvC,KHKd,CGLJ,EEFQ,CAAkB,GAAlB,EAAuB,GAAvB,CAAR,ELOiC1C,SAA7B,sCAAsEC,CAAtE,WAA+E;AGJnFwC,ACDAa,AJMQnD,QGLRsC,ACDAa,IJMQnD,CINH,EAAE,QJMY,CGLH,CHKK,EAD8D,CGJ/D,EAApB;AACAuC,ACFSpC,AJODF,AKRR,QFGAsC,ECFSpC,EJODF,AKRJmB,CAAC,CFGC,CCFQ,CCDN,CDCQ,GAAT,CCDK,CLQM,AKRL0D,ELQO,UKRZ,CAAkB,GAAlB,EAAuB,GAAvB,CAAR;AFIA7C,ACHqBiB,AJK8D,QGFnFjB,ECHqBiB,CJKjB,EGFC,ACHmB,CDGlBR,CCHoB,IDG1B;ACHO,AJSH7C,AKTJ,SDFyB,CJWrBA,EKTA8E,OLSS,CKTD,GAAG,KAAI,CAACG,YAAL,CAAkB,EAAlB,EAAsB,EAAtB,CAAf;AFIA,ACHA1B,AJSC,QITDA,IDGI,CAACnB,ACHA,EAAE,EAHkB,CDMf,CAACU,MAAX,EAAmB;AACfnB,ACHJ6B,AJSH,AKVG,OLlBE,CImBFA,AJUJ,EGPQ7B,MEJGqD,KDCM,EDGI,ACHF,CDGGrC,ACHF,GAJS,GCGzB,MFIiB,CAAb;AACH,ACHDc,ACDI,QDCJA,KAAK,EAAE,ACDEoB,cAAc,CAAC,CAAD,CAAnB;AFKP,ACJYnB,ACADe,OFNkB,EAU3B,CCJUf,ECADe,CFNkB,ACMd,CDNhB,CCMkB,ACAH,CDAI,EAAR,ACAO,KAAI,CAACS,YAAL,CAAkB5D,CAAlB,EAAqBC,CAArB,CAAN;AFKZ,ACLuBoC,AJUvB,AKTYgB,UFIR5B,ACLmBY,CJUlBzE,CKTOyF,CDDc,EAAE,AJU5B,AKTe,CDDc,AJUnBxF,EKTQ,EFIJ,CHKd,CAAgB,CGLC,AEJK,CAACgG,KLSvB,EAAyB,IKTP,CAAiBV,GAAG,CAACnD,CAAJ,GAAQmD,GAAG,CAAC1E,IFIb,CEJC,GFIlB,AEJsC,EFIf4C,AEJtB,EAAyCpB,CAAzC,ELSlB,AKT8DuD,OFI7C,CAAjB,AEJkB,CAAN;AFKf,ACNc,AJWX,AKTYF,SDPiB,EJgBxB1F,CKTO0F,GLSZ,AKTe,CLSLzF,EKTQ,GLSlB,CAAgB,CKTM,CAAC+F,KLSvB,EAAyB,KKTP,CAAkBP,GAAG,CAACrD,CAAJ,GAAQqD,GAAG,CAAC5E,KAAZ,GAAoB,ELSxD,AKToC,GAAyB+E,QAA3C,EAAqDvD,CAArD,CAAN;ADDRqC,AJWJ,AKTY,QDFRA,GJWC1E,GIXK,CJWV,CIXY,AJWFC,KAAV,CAAgB,OAAhB,EAAyB,4BAAzB;AIXcuE,AJYd,UIZcA,CJYTxE,EIZY,EAAE,AJYnB,CIZoB,AJYVC,GIZE,EJYZ,CAAgB,OAAhB,EAAyB,4BAAzB;AIZyBwE,AJazB,AKVQ,UDHiBA,CJapBzE,EIbuB,EAAE,AJa9B,AKVa2F,CLUH1F,KAAV,CAAgB,OAAhB,AKV2B,CAAC,CLUH,AKVE,CAAnB,gCLUR;AIbY,AJcZ,AKVYsF,EFjCWlE,MAAM,CAACC,ACuBD,EJoBxBtB,CKVOuF,GLUZ,AKVe,CLULvE,EKVQ,KAAI,CAACgF,GLUvB,CAAsB,MAAtB,EAA8B,AKVZ,CAAkB5D,CAAlB,EAAqBC,CAArB,CAAN,2BLUZ,EAAiE;AIb7DsC,AJcA1D,AKVQwE,QDJRd,AJcA1D,IKVQwE,GAAG,CDJH,EAAE,ACII,CLUH,EAAE,EKVK,CLS2C,AKT1CO,YAAL,CAAkBT,GAAG,CAACnD,CAAJ,GAAQ,GAA1B,EAA+BC,CAA/B,CAAN;ADJImC,AJeZtD,AKVQwE,QLURxE,EIfYsD,ECKJkB,CDLO,EAAE,ACKN,GLUD,AKVI,CDLJ,CJeE,GKVM,CAACM,YAAL,CAAkBP,GAAG,CAACrD,CAAJ,GAAQ,GAA1B,EAA+BC,CAA/B,CAAN;ADLeoC,AJasC,AKPrD,OLOZ,EAnCM,CIsBqBA,AJiB3B,GIjB8B,EAAE;AAAlB,SAPe;AAQzBG,AJiBJ,AKXQ,QDNJA,GJiBC5E,IAAL,AKXa2F,CLWH3E,CIjBG,EAAE,KARc,GJyB7B,CAAsB,CKXK,CAAC,CAAD,CAAnB,ELWR,EAA8B,wBAA9B,EAAwD;AIh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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: 'LOAD',\r\n        MENU: 'MENU',\r\n        CARD: 'CARD',\r\n        FIRE: 'FIRE',\r\n        TOOL: 'TOOL'\r\n    }\r\n}","import { CST } from '../CST';\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n    init() {\r\n\r\n    }\r\n    preload() {\r\n        // MAIN MENU\r\n        this.load.image('title_bg', './assets/image/title_bg.jpg');\r\n        this.load.image('menu_button', './assets/image/menu_button.png');\r\n        this.load.image('back_button', './assets/image/back.png');\r\n        // LOADING BAR\r\n        let loadingBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff\r\n            }\r\n        });\r\n\r\n        this.load.on('progress', (percent) => {\r\n            loadingBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percent, 50);\r\n        });\r\n\r\n        this.load.on('complete', () => {\r\n        });\r\n        // CARDS\r\n        let cardIndex = 0;\r\n        for (let i = 0; i < 55; i++) {\r\n            if (i !== 13 && i !== 27 && i !== 41) {\r\n                this.load.spritesheet(`card${cardIndex}`, `assets/sprite/cards/tile0${i}.png`, {\r\n                    frameHeight: 96,\r\n                    frameWidth: 72\r\n                });\r\n                cardIndex++;\r\n            }\r\n        }\r\n        // FIRE\r\n        this.load.image('space', 'assets/particles/starfield.jpg');\r\n        this.load.image('fire1', 'assets/particles/fire1.png');\r\n        this.load.image('fire2', 'assets/particles/fire2.png');\r\n        this.load.image('fire3', 'assets/particles/fire3.png');\r\n        this.load.image('smoke', 'assets/particles/smoke-puff.png');\r\n        this.load.spritesheet('ball', 'assets/particles/plasmaball.png', {\r\n            frameHeight: 128,\r\n            frameWidth: 128\r\n        });\r\n        // TOOL\r\n        this.load.spritesheet('euro', 'assets/sprite/euro.png', {\r\n            frameHeight: 128,\r\n            frameWidth: 128\r\n        });\r\n    }\r\n    create() {\r\n        this.scene.start(CST.SCENES.MENU);\r\n    }\r\n}","/** @type {import(\"../typings/phaser\")} */\r\nimport { CST } from '../CST';\r\n\r\nexport default function createButton(button, scene, text, that) {\r\n    button.setInteractive();\r\n    button.on('pointerup', () => {\r\n        that.scene.start(scene);\r\n    });\r\n    button.on('pointerover', () => {\r\n        that.game.canvas.style.cursor = \"pointer\";\r\n    });\r\n    button.on('pointerout', () => {\r\n        that.game.canvas.style.cursor = \"initial\";\r\n    });\r\n    let txt = that.add.text(0, 0, text, {\r\n        font: '20px Arial',\r\n        fill: '#fff',\r\n        align: 'center'\r\n    }).setDepth(2);\r\n    txt.x = button.x - txt.width / 2;\r\n    txt.y = button.y - txt.height / 2;\r\n}\r\n\r\nexport function createBackButton(that, interval) {\r\n    let btn = that.add.image(that.game.renderer.width - 64, that.game.renderer.height - 64, 'back_button').setDepth(0);\r\n    btn.setInteractive();\r\n    btn.on('pointerup', () => {\r\n        if (interval) {\r\n            clearInterval(interval);\r\n        }\r\n        that.scene.start(CST.SCENES.MENU);\r\n    });\r\n    btn.on('pointerover', () => {\r\n        that.game.canvas.style.cursor = \"pointer\";\r\n    });\r\n    btn.on('pointerout', () => {\r\n        that.game.canvas.style.cursor = \"initial\";\r\n    });\r\n    btn.setScale(0.6);\r\n    return btn;\r\n}","import { CST } from '../CST';\r\nimport createButton from './utils';\r\n\r\nexport class MenuScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.MENU\r\n        })\r\n    }\r\n    create() {\r\n        this.add.image(0, 0, 'title_bg').setOrigin(0).setDepth(0);\r\n        let logo = this.add.text(0, this.game.renderer.height * 0.2, 'Gamanza Test', {\r\n            font: '48px Arial',\r\n            fill: '#fff',\r\n            align: 'center'\r\n        }).setDepth(1);\r\n        logo.x = this.game.renderer.width / 2 - logo.width / 2;\r\n        let cardButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2, 'menu_button').setDepth(1);\r\n        let toolButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2 + 100, 'menu_button').setDepth(1);\r\n        let fireButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2 + 200, 'menu_button').setDepth(1);\r\n        createButton(cardButton, CST.SCENES.CARD, 'Cards', this);\r\n        createButton(toolButton, CST.SCENES.TOOL, 'Image/Text Generator', this);\r\n        createButton(fireButton, CST.SCENES.FIRE, 'Fire', this);\r\n    }\r\n}","import { CST } from '../CST';\r\nimport { createBackButton } from './utils';\r\n\r\nexport class CardScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.CARD\r\n        })\r\n    }\r\n    preload() {\r\n        this.add.image(0, 0, 'title_bg').setOrigin(0).setDepth(0);\r\n    }\r\n    create() {\r\n        let height = 0;\r\n        let cards = [];\r\n        let cardIndex = 0;\r\n        for (let i = 51; i >= 0; i--) {\r\n            let card = this.add.sprite(100, 100 + height, `card${cardIndex}`).setDepth(i);\r\n            cards.push(card);\r\n            cardIndex++;\r\n            height += 10;\r\n        }\r\n        let secondDeckWidth = 500;\r\n        let secondDeckHeight = 610;\r\n        let sDepth = 0;\r\n        let cardInterval = setInterval(() => {\r\n            cards[0].x = secondDeckWidth;\r\n            cards[0].y = secondDeckHeight;\r\n            cards[0].setDepth(sDepth);\r\n            secondDeckHeight -= 10;\r\n            sDepth++;\r\n            cards.shift();\r\n            if (!cards.length) {\r\n                clearInterval(cardInterval);\r\n            }\r\n        }, 1000);\r\n        let backButton = createBackButton(this, cardInterval);\r\n    }\r\n}","import { CST } from '../CST';\r\nimport { createBackButton } from './utils';\r\n\r\nexport class FireScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.FIRE\r\n        })\r\n    }\r\n    init() {\r\n        let fpsText;\r\n        let particles;\r\n    }\r\n    preload() {\r\n        this.add.image(0, 0, 'title_bg').setOrigin(0).setDepth(0);\r\n        this.load.image('fire', 'assets/particles/muzzleflash3.png');\r\n        let backButton = createBackButton(this);\r\n    }\r\n    create() {\r\n        this.fpsText = this.add.text(10, 10, 'FPS: -- \\n-- Particles', {\r\n            font: 'bold 26px Arial',\r\n            fill: '#ffffff'\r\n        });\r\n    \r\n        this.particles = this.add.particles('fire');\r\n    \r\n        this.particles.createEmitter({\r\n            alpha: { start: 1, end: 0 },\r\n            scale: { start: 0.5, end: 2.5 },\r\n            speed: 20,\r\n            accelerationY: -300,\r\n            angle: { min: -85, max: -95 },\r\n            rotate: { min: -180, max: 180 },\r\n            lifespan: { min: 1000, max: 1100 },\r\n            blendMode: 'ADD',\r\n            frequency: 110,\r\n            maxParticles: 10,\r\n            x: 400,\r\n            y: 300\r\n        });\r\n    }\r\n    update(time, delta) {\r\n        this.fpsText.setText('FPS: ' + (1000/delta).toFixed(3) + '\\n' + this.particles.emitters.first.alive.length + ' Particles');\r\n    }\r\n}","import { CST } from '../CST';\r\nimport { createBackButton } from './utils';\r\n\r\nexport class ToolScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.TOOL\r\n        })\r\n    }\r\n    preload() {\r\n        this.add.image(0, 0, 'title_bg').setOrigin(0).setDepth(0);\r\n    }\r\n    create() {\r\n        if (el1) this.destroy(el1);\r\n        if (el2) this.destroy(el2);\r\n        if (el3) this.destroy(el3);\r\n        const configurations = ['STS', 'SSS', 'SST', 'TST'];\r\n        let el1;\r\n        let el2;\r\n        let el3;\r\n        let fontSize;\r\n        let generatorInterval = setInterval(() => {\r\n            if (el1) this.destroy(el1);\r\n            if (el2) this.destroy(el2);\r\n            if (el3) this.destroy(el3);\r\n            let selectedConfig = configurations[this.getRandomInt(0, configurations.length - 1)];\r\n            let x = this.getRandomInt(100, 650);\r\n            let y = this.getRandomInt(100, 650);\r\n            let fontSize = this.getRandomInt(14, 42);\r\n            switch(selectedConfig) {\r\n                case configurations[0]:\r\n                    el1 = this.displayImage(x, y);\r\n                    el2 = this.displayText(el1.x + el1.width - 78, y, fontSize);\r\n                    el3 = this.displayImage(el2.x + el2.width + 20 + fontSize, y);\r\n                    break;\r\n                case configurations[1]:\r\n                    el1 = this.displayImage(x, y);\r\n                    el2 = this.displayImage(el1.x + 100, y);\r\n                    el3 = this.displayImage(el2.x + 100, y);\r\n                    break;\r\n                case configurations[2]:\r\n                    el1 = this.displayImage(x, y);\r\n                    el2 = this.displayImage(el1.x + 100, y);\r\n                    el3 = this.displayText(el2.x + el2.width - 78, y, fontSize);\r\n                    break;\r\n                case configurations[3]:\r\n                    el1 = this.displayText(x, y, fontSize);\r\n                    el2 = this.displayImage(el1.x + el1.width + 50, y);\r\n                    el3 = this.displayText(el2.x + el2.width - 78, y, fontSize);\r\n                    break;\r\n            }\r\n        }, 2000);\r\n        let backButton = createBackButton(this, generatorInterval);\r\n    }\r\n    getRandomInt(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n    destroy(el) {\r\n        if (el.type === 'Sprite') {\r\n            el.destroy();\r\n        }\r\n        if (el.type === 'Text') {\r\n            el.setVisible(false);\r\n        }\r\n    }\r\n    displayImage(x, y) {\r\n        return this.add.sprite(x, y, `euro`).setScale(0.5);\r\n    }\r\n    displayText(x, y, fontSize) {\r\n        return this.add.text(x, y, 'Sample text', {\r\n            font: `${fontSize}px Arial`,\r\n            fill: '#fff',\r\n            align: 'center'\r\n        });\r\n    }\r\n}","/** @type {import(\"../typings/phaser\")} */\r\nimport { LoadScene } from './scenes/LoadScene';\r\nimport { MenuScene } from './scenes/MenuScene';\r\nimport { CardScene } from './scenes/CardScene';\r\nimport { FireScene } from './scenes/FireScene';\r\nimport { ToolScene } from './scenes/ToolScene';\r\n\r\nexport let game = new Phaser.Game({\r\n    type: Phaser.WEBGL,\r\n    width: 1024,\r\n    height: 768,\r\n    scene: [\r\n        LoadScene,\r\n        MenuScene,\r\n        CardScene,\r\n        FireScene,\r\n        ToolScene\r\n    ],\r\n    physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n            useTree: false,\r\n            gravity: { y: 100 }\r\n        }\r\n    },\r\n    render: {\r\n        pixelArt: true\r\n    }\r\n});"]}